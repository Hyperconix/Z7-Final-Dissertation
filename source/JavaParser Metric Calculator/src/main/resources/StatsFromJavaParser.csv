method,surfaceIfs,nestedIfs,surfaceSwitches,nestedSwitches,surfaceFors,nestedFors,surfaceForEachs,nestedForEachs,surfaceWhiles,nestedWhiles,surfaceDos,nestedDos,iterativeStmts,conditionalStmts
"com.taobao.arthas.core.view.ObjectView.appendStringBuilder(StringBuilder,String)",1,0,0,1,0,0,0,0,0,0,0,0,0,2
"com.taobao.arthas.core.view.ObjectView.renderObject(Object,int,int,StringBuilder)",1,17,0,1,0,24,0,13,0,0,0,0,37,19
com.taobao.arthas.core.util.TokenUtils.findSecondTokenText(List<CliToken>),1,2,0,0,0,0,1,0,0,0,0,0,1,3
com.lmax.disruptor.dsl.ConsumerRepository.getLastSequenceInChain(boolean),0,1,0,0,0,0,1,0,0,0,0,0,1,1
"com.lmax.disruptor.dsl.Disruptor.shutdown(long,TimeUnit)",0,1,0,0,0,0,0,0,1,0,0,0,1,1
com.lmax.disruptor.MultiProducerSequencer.setAvailable(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.lmax.disruptor.dsl.Disruptor.hasBacklog(),0,1,0,0,0,0,1,0,0,0,0,0,1,1
com.lmax.disruptor.RingBuffer.getCursor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.lmax.disruptor.dsl.EventProcessorInfo.getSequences(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.lmax.disruptor.FixedSequenceGroup.get(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.lmax.disruptor.dsl.ConsumerRepository.add(EventProcessor,EventHandler<?superT>,SequenceBarrier)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.lmax.disruptor.BlockingWaitStrategy.waitFor(long,Sequence,Sequence,SequenceBarrier)",1,0,0,0,0,0,0,0,1,1,0,0,2,1
"com.lmax.disruptor.Sequence.compareAndSet(long,long)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.lmax.disruptor.RingBuffer.get(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.lmax.disruptor.MultiProducerSequencer.next(int),1,2,0,0,0,0,0,0,0,0,1,0,1,3
com.alibaba.druid.wall.spi.OracleWallProvider.createParser(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.MySqlWallVisitor.preVisit(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(ConnectionProxy,String)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.wall.WallConfig.configFromProperties(Properties),0,10,0,0,0,0,0,1,0,0,0,0,1,10
com.alibaba.druid.wall.WallFilter.init(DataSourceProxy),4,6,0,0,0,0,0,0,0,0,0,0,0,10
com.alibaba.druid.wall.spi.SQLServerWallProvider.createWallVisitor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.JdbcStatManager.getSqlList(),1,5,0,0,0,0,2,3,0,0,0,0,5,6
"com.alibaba.druid.mock.MockDriver.createMockConnection(MockDriver,String,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.SQLServerWallProvider.createParser(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.createSQLSelectParser(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeQuery(PreparedStatementProxy),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidDataSource.createAndStartCreatorThread(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidConnectionHolder.reset(),4,0,0,0,0,0,1,0,0,0,0,0,1,4
"com.alibaba.druid.wall.WallProvider.addWhiteSql(String,Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>,boolean)",2,5,0,0,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.wall.WallProvider.getTableStatWithLowerName(String),1,1,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidPooledPreparedStatement.executeQuery(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.wall.WallUtils.isValidateMySql(String,WallConfig)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallProvider.checkInternal(String),10,11,0,0,0,1,0,1,0,0,0,0,2,21
com.alibaba.druid.sql.ast.SQLObjectImpl.accept(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.MySqlWallVisitor.toSQL(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.mock.MockDriver.createMockPreparedStatement(MockConnection,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.wall.spi.WallVisitorUtils.getValue(WallVisitor,SQLExpr)",12,12,0,2,0,0,0,0,0,0,0,0,0,26
com.alibaba.druid.mock.MockDriver.createMockStatement(MockConnection),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSourceFactory.createDataSource(Map),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.put(PhysicalConnectionInfo),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidConnectionHolder.getStatementPool(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.wall.WallProvider.addBlackSql(String,Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>,List<Violation>,boolean)",1,4,0,0,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.wall.spi.MySqlWallProvider.createExportParameterVisitor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.FilterChainImpl.nextFilter(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallProvider.checkValid(String),0,1,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.wall.WallUtils.isValidateOracle(String,WallConfig)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.mock.MockDriver.registerDriver(Driver),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidDataSource.createAndStartDestroyThread(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.proxy.DruidDriver.registerDriver(Driver),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.SQLUtils.translateOracleToMySql(String),0,0,0,1,1,0,0,0,0,0,0,0,1,1
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visitorBinaryRight(SQLBinaryOpExpr),3,3,0,1,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidPooledConnection.createStatement(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLDataTypeImpl.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.OracleWallProvider.createExportParameterVisitor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.PGWallProvider.createParser(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.wall.spi.WallVisitorUtils.loadResource(Set<String>,String)",0,4,0,2,0,0,0,0,0,1,0,0,1,6
com.alibaba.druid.wall.WallUtils.isValidateOracle(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.takeLast(),0,3,0,0,0,0,0,0,0,1,0,0,1,3
com.alibaba.druid.sql.parser.Lexer.token(),0,0,0,5,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.wall.WallUtils.isValidateSqlServer(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.accept0(SQLASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledConnection.close(),5,1,0,0,0,0,1,0,0,0,0,0,1,6
com.alibaba.druid.wall.WallContext.getTableStat(String),2,1,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.parser.SQLExprParser.parseLimit(),1,5,0,1,0,0,0,0,0,0,0,0,0,7
"com.alibaba.druid.sql.SQLUtils.format(String,String,List<Object>,FormatOption)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(long),0,12,0,0,1,0,0,0,0,0,0,0,1,12
"com.alibaba.druid.wall.spi.WallVisitorUtils.getValue_and(WallVisitor,List<SQLExpr>)",1,5,0,2,1,0,0,0,0,0,0,0,1,8
com.alibaba.druid.stat.DruidDataSourceStatManager.getDataSourceList(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
com.alibaba.druid.wall.spi.OracleWallVisitor.preVisit(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.stat.StatFilter.getConnectionInfo(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidPooledConnection.recycle(),3,1,0,0,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.stat.JdbcSqlStat.getCompositeType(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.scanString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.PagerUtils.limitSQLServer(SQLSelect,String,int,int,boolean)",2,3,0,0,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.stat.DruidDataSourceStatManager.clear(),0,1,0,0,0,0,0,1,0,0,0,0,1,1
com.alibaba.druid.pool.DruidAbstractDataSource.getProxyFilters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.scanNumber(),5,8,0,0,1,4,0,0,0,0,0,0,5,13
com.alibaba.druid.sql.ast.statement.SQLSelectStatement.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.support.json.JSONWriter.write(char),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.OracleWallVisitor.toSQL(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.WallVisitorUtils.isInTableSource(SQLObject),1,1,0,2,1,0,0,0,0,0,0,0,1,4
com.alibaba.druid.sql.parser.SQLExprParser.bitXor(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.PagerUtils.hasUnorderedLimit(String,String)",2,0,0,0,0,0,0,2,0,0,0,0,2,2
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLMethodInvokeExpr),4,10,0,1,1,0,0,0,0,0,0,0,1,15
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.preVisit(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.MySqlWallVisitor.getViolations(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallProvider.getBlackSql(String),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.parseSelectItem(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidDataSource.registerMbean(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.parser.SQLStatementParser.parseValueClause(List<SQLInsertStatement.ValuesClause>,int,SQLObject)",0,19,0,2,1,1,0,0,0,0,0,0,2,21
"com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLExprTableSource)",2,13,0,2,0,0,0,0,0,1,0,0,1,17
com.alibaba.druid.filter.FilterChainImpl.getFilters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.parser.SQLParserUtils.createSQLStatementParser(String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlEvalVisitorImpl.visit(SQLBinaryOpExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl.configFromProperties(Properties),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.WallVisitorUtils.form(String),3,0,0,2,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.util.FnvHash.hashCode64(String),3,1,0,0,0,0,0,0,0,0,0,0,0,4
"com.alibaba.druid.pool.DruidAbstractDataSource.initStatement(DruidPooledConnection,Statement)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.parser.Lexer.nextTokenComma(),5,2,0,5,0,0,0,0,0,0,0,0,0,12
com.alibaba.druid.support.http.WebStatFilter.init(FilterConfig),1,12,0,0,0,0,0,0,0,0,0,0,0,13
com.alibaba.druid.sql.parser.SQLStatementParser.parseSelect(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidPooledConnection.afterExecute(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.wall.spi.WallVisitorUtils.checkSelectForMultiTenant(WallVisitor,SQLSelectQueryBlock)",6,10,0,2,0,0,0,0,0,0,0,0,0,18
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreateIndexUsing(SQLCreateIndexStatement),1,1,0,1,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLSelectItem),3,1,0,1,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.sql.parser.SQLExprParser.parseOrderBy(),1,1,0,1,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.pool.DruidDataSource.validationQueryCheck(),6,0,0,0,0,0,0,0,0,0,0,0,0,6
"com.alibaba.druid.wall.WallProvider.recordStats(Map<String,WallSqlTableStat>,Map<String,WallSqlFunctionStat>)",2,2,0,0,0,0,0,2,0,0,0,0,2,4
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.println(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.mock.MockDriver.connect(String,Properties)",6,1,0,0,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.sql.ast.expr.SQLAllColumnExpr.accept0(SQLASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallTableStat.addSqlTableStat(WallSqlTableStat),0,10,0,0,0,0,0,0,0,0,0,0,0,10
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.createChain(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseAlterTable(boolean),0,43,0,1,1,2,0,0,0,0,0,0,3,44
com.alibaba.druid.sql.parser.Lexer.identifierEquals(String),2,0,0,5,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.sql.parser.SQLExprParser.createColumnDefinition(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLBinaryOpExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.Lexer.nextTokenNotOrNull(),1,2,0,5,0,0,0,0,1,0,0,0,1,8
"com.alibaba.druid.filter.encoding.EncodingConvertFilter.connection_connect(FilterChain,Properties)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.wall.WallProvider.getConfig(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.isAsyncCloseConnectionEnable(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidConnectionHolder,Connection)",2,11,0,0,0,0,0,0,0,0,0,0,0,13
"com.alibaba.druid.wall.spi.WallVisitorUtils.preVisitCheck(WallVisitor,SQLObject)",3,0,0,2,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.createChain(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.config(VisitorFeature,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.FilterChainImpl.getDataSource(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.DruidDataSourceStatManager.getInstances(),1,2,0,0,0,0,0,0,0,0,0,0,0,3
"com.alibaba.druid.sql.PagerUtils.limitOracle(SQLSelect,String,int,int,boolean)",2,7,0,0,0,0,0,0,0,0,0,0,0,9
"com.alibaba.druid.wall.spi.WallVisitorUtils.getValueFromAttributes(WallVisitor,SQLObject)",2,0,0,2,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.sql.ast.statement.SQLUpdateSetItem.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.split(SQLBinaryOpExpr,SQLBinaryOperator)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.WallVisitorUtils.initWallTopStatementContext(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.evalExpr(String,String,List<Object>)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.parser.Lexer.scanAlias(),0,14,0,5,1,1,0,0,0,0,0,0,2,19
"com.alibaba.druid.util.Utils.loadFromFile(String,Set<String>)",0,2,0,0,0,1,0,0,0,0,0,0,1,2
com.alibaba.druid.pool.DruidAbstractDataSource.getName(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.proxy.DruidDriver.getDataSource(String,Properties)",1,3,0,0,0,0,0,2,0,0,0,0,2,4
"com.alibaba.druid.sql.ast.SQLObjectImpl.acceptChild(SQLASTVisitor,List<?extendsSQLObject>)",1,0,0,0,0,0,1,0,0,0,0,0,1,1
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlCreateTableStatement),1,1,0,0,0,0,1,0,0,0,0,0,1,2
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLBinaryOpExprGroup),3,21,0,1,1,1,0,1,0,0,0,0,3,25
"com.alibaba.druid.sql.parser.SQLParserFeature.config(int,SQLParserFeature,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.util.Utils.readFromResource(String),0,2,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.support.http.WebStatFilter.doFilter(ServletRequest,ServletResponse,FilterChain)",5,10,0,0,0,0,0,0,0,0,0,0,0,15
com.alibaba.druid.stat.DruidDataSourceStatManager.isRegisterToSystemProperty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.DB2WallProvider.createParser(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLAlterTableStatement),4,3,0,0,1,0,1,0,0,0,0,0,2,7
"com.alibaba.druid.sql.PagerUtils.limit(String,String,int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.stat.DruidStatService.registerMBean(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerSelectParser.parseTableSourceRest(SQLTableSource),1,1,0,0,0,1,0,0,0,0,0,0,1,2
com.alibaba.druid.sql.ast.statement.SQLTruncateStatement.addTableSource(SQLName),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.visitor.VisitorFeature.config(int,VisitorFeature,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLNumericLiteralExpr)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.setRight(SQLExpr),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.createSelectParser(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLCreateViewStatement),8,1,0,1,0,1,0,0,0,0,0,0,1,10
com.alibaba.druid.filter.FilterChainImpl.connection_isClosed(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parsePartition(),2,4,0,1,1,1,0,0,0,0,0,0,2,7
com.alibaba.druid.support.json.JSONWriter.writeDate(Date),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.proxy.jdbc.WrapperProxyImpl.putAttribute(String,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcStatManager.reset(),0,0,0,0,0,0,2,0,0,0,0,0,2,0
com.alibaba.druid.sql.parser.SQLExprParser.xor(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter.endVisit(MySqlOutFileExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLCharacterDataType.clone(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.support.json.JSONParser.nextChar(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeQuery(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLObjectImpl.hasBeforeComment(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExprGroup.add(SQLExpr),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.split(List<SQLExpr>,SQLExpr,SQLBinaryOperator)",3,8,0,0,2,0,0,0,0,0,0,0,2,11
"com.alibaba.druid.filter.stat.StatFilter.internalBeforeStatementExecute(StatementProxy,String)",5,1,0,0,0,0,0,0,0,0,0,0,0,6
"com.alibaba.druid.filter.stat.StatFilter.mergeSql(String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.ast.SQLObjectImpl.acceptChild(SQLASTVisitor,SQLObject)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLSelect.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.hive.parser.HiveStatementParser.createSQLSelectParser(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.parser.SQLExprParser.orderBy(List<SQLSelectOrderByItem>,SQLObject)",0,0,0,1,0,0,0,0,1,0,0,0,1,1
"com.alibaba.druid.filter.FilterChainImpl.resultSetMetaData_getColumnType(ResultSetMetaDataProxy,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.clone(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.support.logging.LogFactory.getLog(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(MySqlSelectQueryBlock),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.wall.spi.WallVisitorUtils.addViolation(WallVisitor,int,String,SQLObject)",0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLAggregateExpr),5,2,0,1,1,0,0,0,0,0,0,0,1,8
com.alibaba.druid.pool.DruidPooledConnection.transactionRecord(String),2,1,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.nameRest(SQLName),1,2,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.support.json.JSONWriter.writeObject(Object),13,2,0,0,0,2,0,0,0,0,0,0,2,15
com.alibaba.druid.filter.stat.StatFilter.statementCreateAfter(StatementProxy),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallSqlTableStat.getTruncateCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallContext.current(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidConnectionHolder.addTrace(DruidPooledStatement),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.Lexer.scanString2(),1,14,0,5,1,1,0,0,0,0,0,0,2,20
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printIndent(),1,0,0,1,0,1,0,0,0,0,0,0,1,2
com.alibaba.druid.sql.parser.Lexer.isOperator(char),0,0,1,5,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.wall.spi.SQLServerWallVisitor.preVisit(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.ResultSetMetaDataProxyImpl.createChain(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLExprTableSource),2,0,0,1,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.repository.SchemaRepository.findTable(SQLName),2,1,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.pool.DruidPooledPreparedStatement.getPreparedStatementHolder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlASTVisitorAdapter.endVisit(SQLIntervalExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.stat.StatFilter.statementPrepareAfter(PreparedStatementProxy),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledConnection.getCatalog(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseIndexHintList(SQLTableSource),3,0,0,0,0,0,0,0,0,0,0,0,0,3
"com.alibaba.druid.sql.dialect.mysql.visitor.MySqlEvalVisitorImpl.registerFunction(String,Function)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printCreateTable(SQLCreateTableStatement,boolean)",5,0,0,1,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.wall.spi.MySqlWallVisitor.getUpdateCheckItems(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.wall.spi.WallVisitorUtils.checkFunction(WallVisitor,SQLMethodInvokeExpr)",4,4,0,2,0,0,0,0,0,0,0,0,0,10
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLUpdateStatement),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.JdbcResultSetStat.afterClose(long),0,4,0,0,2,0,0,0,0,0,0,0,2,4
com.alibaba.druid.pool.DruidPooledStatement.checkOpen(),1,2,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.parser.Lexer.addComment(String),1,0,0,5,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.pool.DruidDataSourceFactory.createDataSourceInternal(Properties),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.parseCommit(),2,2,0,0,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.sql.dialect.odps.parser.OdpsStatementParser.parseSelect(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.FilterChainImpl.resultSet_getMetaData(ResultSetProxy),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.setFeatures(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLCharacterDataType.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLMethodInvokeExpr)",3,44,0,1,0,0,0,0,0,0,0,0,0,48
"com.alibaba.druid.sql.parser.Lexer.subString(int,int)",0,0,0,5,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLSelectStatement),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.parser.Lexer.isKeepComments(),0,0,0,5,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printTableSource(SQLTableSource),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.statement.SQLExprTableSource.cloneTo(SQLExprTableSource),2,0,0,0,0,0,0,1,0,0,0,0,1,2
com.alibaba.druid.sql.ast.expr.SQLDefaultExpr.accept0(SQLASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.accept0(MySqlASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.stat.StatFilter.dataSource_releaseConnection(FilterChain,DruidPooledConnection)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLExprTableSource),2,0,0,0,1,0,0,0,0,0,0,0,1,2
"com.alibaba.druid.sql.PagerUtils.limitDB2(SQLSelect,String,int,int,boolean)",2,4,0,0,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.sql.dialect.odps.parser.OdpsStatementParser.createSQLSelectParser(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLColumnDefinition),10,0,0,0,0,0,1,0,0,0,0,0,1,10
com.alibaba.druid.sql.visitor.SchemaStatVisitor.accept(List<?extendsSQLObject>),0,0,0,1,1,0,0,0,0,0,0,0,1,1
"com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterChain,PreparedStatementProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLSelectParser.parseOrderBy(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.parseTableSourceRest(SQLTableSource),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.stat.JdbcSqlStat.getExecuteCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.getID(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallProvider.getWhiteSql(String),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLPropertyExpr)",0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.statement.SQLUnionQuery.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidAbstractDataSource.setCreateError(Throwable),1,1,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidPooledStatement.transactionRecord(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.logging.LogFilter.statementPrepareCallAfter(CallableStatementProxy),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLServerTop),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcStatementStat.beforeExecute(),0,2,0,0,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.pool.DruidPooledStatement.getResultSet(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterChain,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.WrapperProxyImpl.clearAttributes(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.FilterChainImpl.connection_prepareCall(ConnectionProxy,String,int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidDataSource.initFromSPIServiceLoader(),1,2,0,0,0,0,1,0,0,0,0,0,1,3
"com.alibaba.druid.sql.ast.expr.SQLExprUtils.equals(SQLExpr,SQLExpr)",5,0,0,0,0,0,0,0,0,0,0,0,0,5
"com.alibaba.druid.support.console.Option.printHelp(PrintStream,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLSelect.getOrderBy(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseAliasExpr(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setWhere(SQLExpr),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLExprTableSource),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.wall.spi.DB2WallVisitor.visit(SQLSelectStatement),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.executeQuery(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.expr.SQLInListExpr.setExpr(SQLExpr),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.parser.Lexer.stringVal(),1,0,0,5,0,0,0,0,0,0,0,0,0,6
"com.alibaba.druid.util.jdbc.PreparedStatementBase.setBinaryStream(int,InputStream)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.support.http.stat.WebAppStat.getSessionStat(String,boolean)",1,4,0,1,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.parseDataTypeRest(SQLDataType),3,1,0,1,0,0,0,0,0,0,0,0,0,5
"com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(String,int,int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.visitor.SchemaStatVisitor.visit(SQLCreateTableStatement),3,0,0,1,0,0,1,0,0,0,0,0,1,4
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseReplace(),6,3,0,1,0,1,0,0,0,0,0,0,1,10
"com.alibaba.druid.filter.FilterManager.existsFilter(List<Filter>,String)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.executeUpdate(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLObjectImpl.getAttribute(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.SQLServerWallVisitor.toSQL(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.parsePrimaryKey(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.filter.FilterAdapter.statement_getUpdateCount(FilterChain,StatementProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseInterval(),4,6,0,1,0,0,0,0,0,0,0,0,0,11
com.alibaba.druid.pool.DruidAbstractDataSource.incrementExecuteUpdateCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.emptySignal(),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.pool.DruidPooledPreparedStatement.close(),2,5,0,0,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLBinaryOpExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLObjectImpl.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.logging.LogFilter.configFromProperties(Properties),0,4,0,1,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.pool.DruidPooledStatement.executeBatch(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.OracleWallVisitor.visit(SQLSelectStatement),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidPooledConnection,Throwable,String)",1,1,0,0,0,0,0,1,0,0,0,0,1,2
com.alibaba.druid.sql.ast.expr.SQLCharExpr.clone(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSchedule(),2,1,0,1,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLCharExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.decrementPoolingCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.createCheck(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCommit(),2,1,0,1,0,0,0,0,0,0,0,0,0,4
"com.alibaba.druid.sql.visitor.ParameterizedOutputVisitorUtils.parameterize(String,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLParser.getLexer(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.support.profile.ProfileEntryKey.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.getDataSourceStat(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getOrderBy(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleCreateTableParser.parseOrganization(OracleCreateTableStatement),1,11,0,0,0,0,0,0,0,0,0,0,0,12
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.pool.DruidDataSourceFactory.getObjectInstance(Object,Name,Context,Hashtable<?,?>)",2,1,0,0,1,0,0,0,0,0,0,0,1,3
com.alibaba.druid.sql.parser.SQLExprParser.parseColumn(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.relationalRest(SQLExpr),1,5,0,1,0,1,0,0,0,0,0,0,1,7
com.alibaba.druid.pool.DruidDataSource.removeAbandoned(),1,4,0,0,0,3,0,1,0,0,0,0,4,5
"com.alibaba.druid.sql.PagerUtils.count(String,String)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.postgresql.ast.expr.PGTypeCastExpr.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getStatementProxy(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter.endVisit(SQLIntegerExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.createStatement(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.filter.FilterChainImpl.resultSet_next(ResultSetProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParemeter(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.getCompositeData(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidAbstractDataSource.createResultSetId(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.wall.spi.WallVisitorUtils.getValue_or(WallVisitor,List<SQLExpr>)",1,3,0,2,1,0,0,0,0,0,0,0,1,6
com.alibaba.druid.support.http.stat.WebURIStat.getValue(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledConnection.getConnectedTimeNano(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseSegmentAttributes(OracleSegmentAttributes),0,3,0,1,1,0,0,0,0,0,0,0,1,4
com.alibaba.druid.sql.SQLUtils.toMySqlString(SQLObject),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.MySqlWallVisitor.isDenyTable(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getStartWith(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledConnection.checkState(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.statement.SQLDeleteStatement.removeCondition(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.FilterEventAdapter.connection_createStatement(FilterChain,ConnectionProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.WallVisitorUtils.checkSqlExpr(SQLExpr),1,2,0,2,1,0,0,0,0,0,0,0,1,5
com.alibaba.druid.wall.WallSqlTableStat.incrementSelectCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.mock.MockConnection.createMockStatement(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseColumnRest(SQLColumnDefinition),0,1,0,1,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.util.FnvHash.fnv1a_64(String),1,0,0,0,1,0,0,0,0,0,0,0,1,1
com.alibaba.druid.sql.ast.statement.SQLDeleteStatement.setTableSource(SQLTableSource),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.isCharType(long),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.SQLObjectImpl.getAttributes(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlOutFileExpr.setColumnsEnclosedBy(SQLLiteralExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.PagerUtils.createCountItem(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlUpdateStatement.isLowPriority(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLLimit.setRowCount(SQLExpr),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.FilterChainImpl.statement_setMaxRows(StatementProxy,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLCreateTableStatement.getSchema(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.parser.Lexer.config(SQLParserFeature,boolean)",1,0,0,5,0,0,0,0,0,0,0,0,0,6
"com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(ResultSetProxy,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseShowVariants(),2,0,0,1,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.stat.JdbcStatementStat.incrementCreateCounter(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(ValuesClause),2,3,0,1,1,0,0,0,0,0,0,0,1,6
com.alibaba.druid.pool.DruidAbstractDataSource.getDefaultTransactionIsolation(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setFrom(SQLTableSource),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.parser.SQLExprParser.bitAnd(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.stat.StatFilter.statementExecuteQueryAfter(StatementProxy,String,ResultSetProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.JdbcConnectionStat.setActiveCount(int),0,2,0,0,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.pool.DruidAbstractDataSource.setDriver(Driver),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLIdentifierExpr),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.filter.FilterChainImpl.connection_clearWarnings(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseRollback(),3,2,0,1,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.filter.stat.StatFilterContext.addUpdateCount(int),0,0,0,0,1,0,0,0,0,0,0,0,1,0
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getRawObject(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallContext.clearContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleSelectTableReference.accept0(OracleASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.filter.FilterChainImpl.connection_isReadOnly(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.support.profile.Profiler.release(long),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.mock.MockConnection.createStatement(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.incrementCachedPreparedStatementCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.JdbcConnectionStat.afterConnected(long),0,2,0,0,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getHintsSize(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.filter.FilterChainImpl.statement_getResultSet(StatementProxy),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.wall.spi.MySqlWallVisitor.getConfig(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlDeleteStatement),4,0,0,0,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.pool.DruidPooledStatement.execute(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelect.getXmlPath(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledStatement.getWarnings(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLSelectParser.parseGroupByItem(),1,1,0,2,0,0,0,0,0,0,0,0,0,4
"com.alibaba.druid.filter.stat.StatFilter.statement_close(FilterChain,StatementProxy)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcSqlStat.getValue(boolean),5,0,0,0,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.computeHashCode64(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.stat.DruidStatService.returnJSONResult(int,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setNull(PreparedStatementProxy,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcSqlStat.incrementExecuteSuccessCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(List<SQLStatement>),0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseDataTypeRest(SQLDataType),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"com.alibaba.druid.filter.FilterAdapter.statement_getMaxRows(FilterChain,StatementProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.parseUpdateSetItem(),2,1,0,1,0,0,0,0,0,1,0,0,1,4
"com.alibaba.druid.mock.MockResultSet.updateObject(int,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseConstaint(),0,11,0,1,1,0,0,0,0,0,0,0,1,12
"com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(PreparedStatementProxy,int,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.PreparedStatementHolder.isEnterOracleImplicitCache(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseCreateServer(),1,2,0,1,1,0,0,0,0,0,0,0,1,4
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameter(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLStatementParser.parseHiveInsert(),4,4,0,2,0,2,0,0,0,0,0,0,2,10
com.alibaba.druid.stat.JdbcSqlStat.histogramRecord(long),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.setOwner(SQLExpr),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.pool.DruidPooledStatement.incrementExecuteUpdateCount(),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.dialect.odps.ast.OdpsStatementImpl.accept0(SQLASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.xorRest(SQLExpr),0,5,0,1,1,1,0,0,0,0,0,0,2,6
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(MySqlDeleteStatement),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.setInto(SQLExpr),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.setAutoCommit(boolean),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.filter.stat.StatFilter.createSqlStat(StatementProxy,String)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.stat.JdbcSqlStat.addExecuteTime(long),0,2,0,0,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.util.JdbcUtils.getDriverClassName(String),2,2,0,0,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLPartitionValue),2,1,0,1,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLPartitionByRange),2,2,0,1,1,0,0,0,0,0,0,0,1,5
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eval(String,SQLObject,Object...)",1,0,0,1,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.SQLUtils.toSQLString(List<SQLStatement>,String,List<Object>)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.parser.SQLStatementParser.parseUse(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.wall.WallConfig.getUpdateCheckHandler(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallContext.create(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLSetStatement),4,0,0,0,0,0,0,0,0,0,0,0,0,4
"com.alibaba.druid.sql.SQLUtils.addCondition(String,String,String)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.DruidStatManagerFacade.resetAll(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.visitor.functions.OneParamFunctions.eval(SQLEvalVisitor,SQLMethodInvokeExpr)",7,2,0,0,0,1,0,0,0,0,0,0,1,9
com.alibaba.druid.pool.PreparedStatementPool.put(PreparedStatementHolder),5,3,0,0,0,0,0,0,0,0,0,0,0,8
com.alibaba.druid.pool.DruidPooledStatement.incrementExecuteCount(),3,0,0,0,0,0,0,0,0,0,0,0,0,3
"com.alibaba.druid.sql.visitor.ExportParameterVisitorUtils.exportParameter(List<Object>,SQLExpr)",2,7,0,0,0,2,0,0,0,0,0,0,2,9
com.alibaba.druid.pool.DruidAbstractDataSource.getPasswordCallback(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLExprTableSource),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLBinaryOpExprGroup.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.util.jdbc.ResultSetMetaDataBase.getColumn(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.WallContext.incrementFunctionInvoke(String),2,1,0,0,0,0,0,0,0,0,0,0,0,3
"com.alibaba.druid.sql.visitor.ParameterizedOutputVisitorUtils.parameterize(String,String,List<Object>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleCreateTypeStatement),10,6,0,0,0,1,0,0,0,0,0,0,1,16
com.alibaba.druid.sql.visitor.SchemaStatVisitor.visit(SQLCreateViewStatement),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlCharExpr.accept0(MySqlASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.and(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.parser.SQLSelectParser.parseTableSourceQueryTableExpr(SQLExprTableSource),1,0,0,2,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.visit(SQLNotNullConstraint),2,0,0,1,0,0,0,1,0,0,0,0,1,3
com.alibaba.druid.wall.WallProvider.getTableStat(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidPooledResultSet.checkException(Throwable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.close(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.expr.SQLInListExpr.isNot(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.filter.FilterChainImpl.callableStatement_getObject(CallableStatementProxy,String)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.parser.Lexer.nextTokenLParen(),2,0,0,5,0,0,0,0,0,0,0,0,0,7
"com.alibaba.druid.pool.DruidPooledResultSet.updateInt(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLInsertInto.addValueCause(ValuesClause),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.support.http.stat.WebAppStat.getStatValue(boolean),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.DruidStatService.getSqlStat(Integer),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.setLastExecuteStartNano(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.parseUsingIndex(),0,2,0,1,1,1,0,0,0,0,0,0,2,3
com.alibaba.druid.sql.ast.statement.SQLUnique.cloneTo(SQLUnique),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"com.alibaba.druid.util.FnvHash.hashCode64(String,int,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.close(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.filter.FilterChainImpl.connection_getCatalog(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.expr.SQLPropertyExpr.toString(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.filter.FilterEventAdapter.statementCreateAfter(StatementProxy),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.Lexer.initBuff(int),1,1,0,5,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.sql.ast.statement.SQLSelectItem.getExpr(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLAssignItem),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.statement.SQLSelectGroupByClause.accept0(SQLASTVisitor),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.getDataType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.partitionClauseRest(SQLPartitionBy),2,0,0,1,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock.getCachedSelectList(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.SQLObjectImpl.getBeforeCommentsDirect(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcDataSourceStat.getSqlStatMap(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.initValidConnectionChecker(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.ast.statement.SQLSelectOrderByItem.getNullsOrderType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.wall.spi.DB2WallVisitor.preVisit(SQLObject),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.filter.FilterChainImpl.callableStatement_getObject(CallableStatementProxy,int)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameterNull(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.setFailContinuous(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseAlterFunction(),1,1,0,1,1,0,0,0,0,0,0,0,1,3
"com.alibaba.druid.pool.DruidDataSource.putLast(DruidConnectionHolder,long)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.odps.parser.OdpsExprParser.primaryRest(SQLExpr),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(MySqlUpdateStatement),12,2,0,0,1,0,0,0,0,0,0,0,1,14
com.alibaba.druid.pool.DruidAbstractDataSource.setUsername(String),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.wall.WallUtils.isValidateSqlServer(String,WallConfig)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleCreateTableStatement),13,0,0,0,0,0,0,0,0,0,0,0,0,13
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLServerSelectQueryBlock),7,0,0,0,0,0,0,0,0,0,0,0,0,7
com.alibaba.druid.mock.MockPreparedStatement.execute(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.pool.DruidAbstractDataSource.closePreapredStatement(PreparedStatementHolder),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.stat.JdbcStatManager.getInstance(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(),3,3,0,0,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.wall.spi.OracleWallVisitor.setSqlEndOfComment(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.isCharType(String),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLColumnDefinition.accept0(SQLASTVisitor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.parseBlock(),6,1,0,0,0,0,0,2,0,0,0,0,2,7
com.alibaba.druid.wall.spi.DB2WallProvider.createWallVisitor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.initFromWrapDriverUrl(),2,0,0,0,0,0,1,0,0,0,0,0,1,2
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OracleSelectTableReference),4,2,0,0,0,0,0,0,0,0,0,0,0,6
com.alibaba.druid.sql.ast.expr.SQLNumberExpr.getNumber(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr.merge(ParameterizedVisitor,SQLBinaryOpExpr)",2,9,0,0,1,0,0,0,0,0,0,0,1,11
com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl.getAlias(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.support.profile.ProfileEntry.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.parser.SQLStatementParser.parseAssignItems(List<?superSQLAssignItem>,SQLObject)",0,1,0,2,1,0,0,0,0,0,0,0,1,3
com.alibaba.druid.sql.parser.Lexer.addSymbol(),0,0,0,5,0,0,0,0,0,0,0,0,0,5
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.printInsertColumns(List<SQLExpr>),1,6,0,0,0,1,0,0,0,0,0,0,1,7
com.alibaba.druid.wall.WallContext.incrementCommentCount(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.mock.MockConnection.handleSleep(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printAndAccept(List<?extendsSQLObject>,String)",0,1,0,1,1,0,0,0,0,0,0,0,1,2
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.visit(SQLReplaceStatement),5,3,0,0,0,2,0,0,0,0,0,0,2,8
"com.alibaba.druid.wall.spi.WallVisitorUtils.checkUpdateForMultiTenant(WallVisitor,SQLUpdateStatement)",5,4,0,2,0,0,0,0,0,0,0,0,0,11
"com.alibaba.druid.mock.MockCallableStatement.registerOutParameter(int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"com.alibaba.druid.sql.PagerUtils.createCountUseSubQuery(SQLSelect,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.visit(SQLEvalVisitor,SQLCharExpr)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.stat.StatFilterContext.executeAfter(String,long,Throwable)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr.getSimpleName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.visit(MySqlExplainStatement),3,1,0,0,0,0,0,0,0,0,0,0,0,4
"com.alibaba.druid.proxy.DruidDriver.connect(String,Properties)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.config.ConfigFilter.getPublicKey(Properties,Properties)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.filter.FilterAdapter.init(DataSourceProxy),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.setParameters(List<Object>),1,0,0,1,0,0,0,0,0,0,0,0,0,2
com.alibaba.druid.filter.FilterChainImpl.reset(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.filter.FilterChainImpl.callableStatement_registerOutParameter(CallableStatementProxy,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.wall.spi.WallVisitorUtils.getConditionValue(WallVisitor,SQLExpr,boolean)",0,8,0,2,0,0,0,0,0,0,0,0,0,10
com.alibaba.druid.support.json.JSONUtils.parse(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerStatementParser.parseInsert0(SQLInsertInto,boolean)",7,2,0,0,0,1,0,0,0,0,0,0,1,9
com.alibaba.druid.sql.SQLTransformUtils.transformOracleToPostgresql(SQLMethodInvokeExpr),7,13,0,0,0,0,0,0,0,0,0,0,0,20
com.alibaba.druid.wall.spi.SQLServerWallVisitor.getConfig(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.setSqlStat(JdbcSqlStat),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.util.JdbcUtils.isMySqlDriver(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidDataSource.getStatData(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.sqlserver.visitor.SQLServerOutputVisitor.visit(SQLSetStatement),1,2,0,0,1,0,0,0,0,0,0,0,1,3
com.alibaba.druid.sql.parser.SQLStatementParser.parseTruncate(),2,11,0,2,2,0,0,0,0,0,0,0,2,15
com.alibaba.druid.wall.WallProvider.setName(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLStatementParser.parseWith(),1,0,0,2,0,0,0,0,0,0,0,0,0,3
"com.alibaba.druid.filter.FilterAdapter.connection_createStatement(FilterChain,ConnectionProxy)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.createSelectParser(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.support.json.JSONParser.scanDigit(),2,4,0,0,1,0,0,0,0,0,0,0,1,6
"com.alibaba.druid.sql.repository.SchemaRepository.resolve(SQLStatement,SchemaResolveVisitor.Option...)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.createParameter(int,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.sql.repository.SchemaResolveVisitorFactory.resolve(SchemaResolveVisitor,SQLInsertStatement)",3,0,0,0,0,0,2,0,0,0,0,0,2,3
"com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eq(Object,Object)",13,3,0,1,0,0,0,0,0,0,0,0,0,17
com.alibaba.druid.stat.JdbcDataSourceStat.getStatementStat(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.util.jdbc.PreparedStatementBase.setString(int,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLStatementParser.parseDropView(boolean),3,2,0,2,1,0,0,0,0,0,0,0,1,7
com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getMaxRows(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.stat.JdbcStatManager.getStatContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLUpdateStatement.getHints(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.util.Base64.base64toInt(char,byte[])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.wall.spi.WallVisitorUtils.check(WallVisitor,SQLSelectItem)",3,2,0,2,0,0,0,0,0,0,0,0,0,7
"com.alibaba.druid.filter.stat.StatFilter.statementExecuteAfter(StatementProxy,String,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.parser.OracleSelectParser.queryRest(SQLSelectQuery),3,1,0,0,0,0,0,0,0,0,0,0,0,4
com.alibaba.druid.support.http.stat.WebAppStat.computeUserAgent(String),13,11,0,1,0,0,0,0,0,0,0,0,0,25
com.alibaba.druid.filter.FilterChainImpl.connection_getTransactionIsolation(ConnectionProxy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.util.Base64.base64ToByteArray(String,boolean)",3,3,0,0,1,0,0,0,0,0,0,0,1,6
com.alibaba.druid.pool.DruidPooledStatement.executeUpdate(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.visit(OraclePrimaryKey),3,2,0,0,0,0,0,0,0,0,0,0,0,5
"com.alibaba.druid.support.http.stat.WebAppStat.getURIStat(String,boolean)",3,1,0,1,0,0,0,0,0,0,0,0,0,5
"com.alibaba.druid.filter.FilterChainImpl.resultSet_getObject(ResultSetProxy,int)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.alibaba.druid.wall.WallConfig.isConstArithmeticAllow(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.util.JdbcUtils.close(Closeable),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.wall.spi.MySqlWallVisitor.visit(SQLSelectItem),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(int,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.parser.SQLExprParser.multiplicative(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.sql.ast.statement.SQLCreateTableStatement.findColumn(long),0,2,0,0,0,0,1,0,0,0,0,0,1,2
com.alibaba.druid.pool.DruidPooledConnection.beforeExecute(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.alibaba.druid.proxy.DruidDriver.createDataSourceId(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.xa.JtdsXAConnection.close(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.parseAssignItem(),3,6,0,0,0,0,0,0,0,0,0,0,0,9
com.alibaba.druid.sql.parser.SQLCreateTableParser.parseCreateTable(boolean),6,8,0,0,0,2,0,0,0,0,0,0,2,14
com.alibaba.druid.sql.parser.Lexer.nextTokenIdent(),2,0,0,5,0,0,0,0,1,0,0,0,1,7
com.alibaba.druid.support.http.ResourceServlet.initAuthEnv(),3,4,0,0,0,0,0,2,0,0,0,0,2,7
com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.printValuesList(List<SQLInsertStatement.ValuesClause>),3,2,0,0,1,0,0,0,0,0,0,0,1,5
"com.alibaba.druid.wall.spi.WallVisitorUtils.checkDelete(WallVisitor,SQLDeleteStatement)",4,4,0,2,0,0,0,0,0,0,0,0,0,10
com.alibaba.druid.wall.spi.SQLServerWallProvider.createExportParameterVisitor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.pool.DruidAbstractDataSource.isDupCloseLogEnable(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.alibaba.druid.sql.ast.statement.SQLSelect.setOrderBy(SQLOrderBy),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.alibaba.druid.filter.FilterAdapter.connection_prepareCall(FilterChain,ConnectionProxy,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.Gson.newJsonReader(Reader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.GsonBuilder.create(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.Gson.newJsonWriter(Writer),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.google.gson.Gson.getAdapter(TypeToken<T>),3,2,0,0,0,0,0,1,0,0,0,0,1,5
"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(JsonWriter,T)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
com.google.gson.Gson.atomicLongArrayAdapter(TypeAdapter<Number>),0,0,0,0,2,0,0,0,1,0,0,0,3,0
"com.google.gson.Gson.toJson(Object,Type,Appendable)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.internal.ConstructorConstructor.newDefaultConstructor(Class<?superT>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,Class<TT>,TypeAdapter<?superTT>)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.bind.TypeAdapters.newFactoryForMultipleTypes(Class<TT>,Class<?extendsTT>,TypeAdapter<?superTT>)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.bind.TypeAdapters.newFactory(Class<TT>,TypeAdapter<TT>)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
com.google.gson.internal.Excluder.isAnonymousOrLocal(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.TypeAdapter.nullSafe(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.google.gson.internal.Streams.parse(JsonReader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.Gson.atomicLongAdapter(TypeAdapter<Number>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Gson,TypeToken<?>,Class<?>)",1,4,0,0,0,1,0,1,1,0,0,0,3,5
com.google.gson.stream.JsonReader.peek(),1,0,1,9,0,0,0,0,0,0,0,0,0,11
"com.google.gson.Gson.fromJson(String,Type)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.google.gson.Gson.toJsonTree(Object,Type)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.GsonBuilder.registerTypeAdapter(Type,Object)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.google.gson.internal.JavaVersion.parseDotted(String),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.stream.JsonReader.doPeek(),4,3,1,9,0,0,0,0,0,0,0,0,0,17
"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(Gson,TypeToken<T>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)",2,0,0,1,0,0,0,0,0,0,0,0,0,3
com.google.gson.stream.JsonWriter.beginObject(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.JsonParser.parse(Reader),0,1,0,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.Gson.doubleAdapter(boolean),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.google.gson.Gson.floatAdapter(boolean),3,0,0,0,0,0,0,0,0,0,0,0,0,3
"com.google.gson.internal.ConstructorConstructor.newUnsafeAllocator(Type,Class<?superT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.ConstructorConstructor.newDefaultImplementationConstructor(Type,Class<?superT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.Gson.toJson(Object,Type,JsonWriter)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.JsonStreamParser.next(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.TypeAdapter.fromJson(Reader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.Gson.fromJson(String,Class<T>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.Excluder.excludeClassInStrategy(Class<?>,boolean)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
com.google.gson.internal.JavaVersion.determineMajorJavaVersion(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.LinkedTreeMap.find(K,boolean)",3,4,0,0,0,0,0,0,0,1,0,0,1,7
com.google.gson.reflect.TypeToken.getSuperclassTypeParameter(Class<?>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Gson,TypeToken<T>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.stream.JsonWriter.beforeValue(),0,0,1,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.reflect.TypeToken.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.stream.JsonReader.isLenient(),0,0,0,9,0,0,0,0,0,0,0,0,0,9
com.google.gson.stream.JsonWriter.beforeName(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.LinkedTreeMap.rebalance(Node<K,V>,boolean)",0,7,0,0,1,0,0,0,0,0,0,0,1,7
com.google.gson.stream.JsonReader.nextUnquotedValue(),0,4,0,9,0,1,0,0,0,0,0,0,1,13
com.google.gson.internal.JavaVersion.getMajorJavaVersion(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.internal.Primitives.isPrimitive(Type),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.MapTypeAdapterFactory.create(Gson,TypeToken<T>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.stream.JsonReader.nextNonWhitespace(boolean),1,6,0,9,0,0,0,0,1,0,0,0,1,16
"com.google.gson.stream.JsonWriter.open(int,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.internal.bind.TreeTypeAdapter.read(JsonReader),2,0,0,0,0,0,0,0,0,0,0,0,0,2
com.google.gson.JsonPrimitive.getAsCharacter(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.Excluder.excludeField(Field,boolean)",7,2,0,0,0,0,0,1,0,0,0,0,1,9
com.google.gson.internal.LinkedHashTreeMap.findByObject(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.TreeTypeAdapter.newFactoryWithMatchRawType(TypeToken<?>,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.Excluder.create(Gson,TypeToken<T>)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.google.gson.JsonArray.add(Character),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.Streams.write(JsonElement,JsonWriter)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(Gson,TypeToken<T>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
com.google.gson.stream.JsonReader.locationString(),0,0,0,9,0,0,0,0,0,0,0,0,0,9
com.google.gson.stream.JsonWriter.setHtmlSafe(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(Field,boolean,Excluder)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
com.google.gson.stream.JsonWriter.name(String),3,0,0,0,0,0,0,0,0,0,0,0,0,3
com.google.gson.DefaultDateTypeAdapter.deserializeToDate(String),0,0,0,0,0,0,0,1,0,0,0,0,1,0
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Field),2,0,0,0,0,0,1,0,0,0,0,0,1,2
com.google.gson.internal.reflect.ReflectionAccessor.getInstance(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.scale.BaseResampler.resample(Picture,Picture)",1,0,0,0,1,6,0,0,0,0,0,0,7,1
org.jcodec.common.io.VLC.readVLC(BitReader),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.codecs.h264.decode.CoeffTransformer.idct4x4(int[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.predictChromaInter(Frame[][],MvList,int,int,int,Picture,PartPred[])",0,1,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeVert(Picture,int,int,int,int,int,int,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockChroma(byte[],int,int,byte[],int,int,int,int,int,int)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.common.io.VLC.invert(int,int,int,IntArrayList,IntArrayList)",0,3,0,0,1,1,0,0,0,0,0,0,2,3
org.jcodec.codecs.h264.decode.SliceDecoder.initContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.FrameReader.createSliceReader(ByteBuffer,NALUnit)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.luma(Picture,int[],int,int,BitWriter,int,int[])",0,0,0,0,2,2,0,0,0,0,0,0,4,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.luma(Picture,int,int,BitWriter,int,Picture,CAVLC)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsV(Picture,int,int[][])",1,0,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.common.model.Picture.createCropped(int,int,ColorSpace,Rect)",0,1,0,0,3,0,0,0,0,0,0,0,3,1
"org.jcodec.common.tools.MathUtil.clip(int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.BlockInterpolator.initUnsafe(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.mvEstimate(Picture,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CAVLC.writeACBlock(BitWriter,int,int,MBType,MBType,int[],VLC[],int,int,int[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.MBlock.clear(),1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.io.CABAC.initModels(int[][],SliceType,int,int)",0,1,0,1,1,0,0,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.encode.MotionEstimator.estimate(Picture,byte[],int,int,int,int)",0,2,0,0,1,0,0,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBlockEdgeHoris(Picture,int,int,int,int,int,int,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.encode.MBDeblocker.filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int,boolean)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
org.jcodec.containers.mps.MPSDemuxer.probe(ByteBuffer),0,7,0,1,0,0,0,0,1,0,0,0,1,8
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode16x16(MBlock,Picture,Frame[][],PartPred)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.codecs.h264.decode.CAVLCReader.readUE(BitReader),1,0,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectPredictors(DecoderState,Picture,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChroma(MBlock,int,int,boolean,boolean,Picture,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBsH(Picture,int,int[][])",1,0,0,0,1,2,0,0,0,0,0,0,3,1
org.jcodec.codecs.h264.decode.SliceReader.readIntraNxN(MBlock),4,0,0,0,0,2,0,0,0,0,0,0,2,4
"org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBP(EncodedMB,EncodedMB,EncodedMB)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.CAVLC.codeTableChromaDC(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.decode.SliceReader.readMacroblock(MBlock),3,4,0,0,0,0,0,0,0,0,0,0,0,7
org.jcodec.codecs.h264.decode.SliceDecoder.decodeMacroblocks(Frame[][]),0,0,0,0,0,0,0,0,1,0,0,0,1,0
org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.deblockFrame(Picture),0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.io.CAVLC.readCoeffs(BitReader,VLC,VLC[],int[],int,int,int[])",1,11,0,0,0,4,0,0,0,0,0,0,4,12
"org.jcodec.codecs.h264.decode.CoeffTransformer._idct4x4(int[],int[])",0,0,0,0,3,0,0,0,0,0,0,0,3,0
org.jcodec.codecs.h264.H264Utils.unescapeNAL(ByteBuffer),1,1,0,0,0,0,0,0,1,0,0,0,1,2
org.jcodec.codecs.h264.BufferH264ES.nextFrame(),0,3,0,0,0,0,0,0,1,0,0,0,1,3
"org.jcodec.codecs.h264.decode.MBlockDecoderIntraNxN.decode(MBlock,Picture)",2,0,0,0,0,2,0,0,0,0,0,0,2,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunkBB(int,ByteBuffer)",0,0,0,0,0,0,0,0,1,0,0,0,1,0
"org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x16(MBlock,int,boolean,boolean,int,PartPred)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.common.biari.MDecoder.renormalize(),0,1,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getBlockLuma(Picture,Picture,int,int,int,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.CAVLCReader.readUEtrace(BitReader,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDC(int[][],int,boolean,boolean,byte[],byte[],byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.calcBoundaryStrenth(boolean,boolean,boolean,int,int,int,int,int,int,int,int)",1,4,0,0,0,0,0,0,0,0,0,0,0,5
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.copyCol(byte[],int,int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.io.CABAC.readCoeffs(MDecoder,BlockType,int[],int,int,int[],int[],int[])",0,3,0,1,2,0,0,0,0,0,0,0,2,4
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,int,PartPred)",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC(int[],int,int[])",1,1,0,0,0,3,0,0,0,0,0,0,3,2
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillVerticalEdge(Picture,int,int,int[][])",1,1,0,0,1,2,0,0,0,0,0,0,3,2
"org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])",0,0,1,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.CAVLCReader.readNBit(BitReader,int,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.io.BitWriter.putInt(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.residualInter(MBlock,Frame[][],boolean,boolean,int,int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.codecs.h264.decode.CoeffTransformer.invDC4x4(int[]),0,0,0,0,2,0,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.PredictionMerger.copyPrediction(byte[],int,int,int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.fillHorizontalEdge(Picture,int,int,int[][])",1,1,0,0,1,2,0,0,0,0,0,0,3,2
"org.jcodec.codecs.h264.encode.MBDeblocker.deblockMBGeneric(EncodedMB,EncodedMB,EncodedMB,int[][],int[][])",2,0,0,0,2,0,0,0,0,0,0,0,2,2
org.jcodec.codecs.h264.encode.MBEncoderI16x16.extractDC(int[][]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.common.IntArrayList.set(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.common.io.VLCBuilder.setInt(int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CAVLC.readACBlock(BitReader,int[],int,int,boolean,MBType,boolean,MBType,int,int,int[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.H264Utils.escapeNAL(ByteBuffer,ByteBuffer)",0,1,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.containers.mp4.boxes.NodeBox.findBox(Box,List<String>,Collection<Box>)",1,2,0,0,0,0,0,1,0,0,0,0,1,3
"org.jcodec.codecs.h264.encode.MBDeblocker._filterBs(int,int,int,byte[],byte[],int,int,int,int,int,int,boolean)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceReader.readResidualAC(boolean,boolean,int,MBType,int,int,int,int,int,int[])",1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.jcodec.common.io.VLCBuilder.getVLC(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.pubBlkOnePlane(byte[],int,byte[],int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSubtract(byte[],int,int,int,int,int[],byte[],int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.encode.MBEncoderI16x16.save(),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.SliceReader.readLuma(MBlock,boolean,boolean,int,int)",0,2,0,0,1,0,0,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.decode.MBlockSkipDecoder.predictPSkip(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,Picture)",1,1,0,0,1,0,0,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.decode.SliceReader.readMBlock(MBlock,SliceType)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.decode.BlockInterpolator.initSafe(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.H264Encoder.encodeSlice(SeqParameterSet,PictureParameterSet,Picture,ByteBuffer,boolean,int,SliceType,int)",2,3,0,0,1,1,0,0,0,0,0,1,3,5
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXX(byte[],int,int,byte[],int,int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceReader.readMVD(int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader._readChromaAC(boolean,boolean,int,int[],int,MBType,boolean,int[][])",0,2,0,0,1,0,0,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.encode.MBDeblocker.filterBsChr(int,int,int,byte[],byte[],int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictDC(int[][],boolean,boolean,byte[],byte[],int,byte[])",1,0,0,0,1,4,0,0,0,0,0,0,5,1
"org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeAC8x8(int[],int,int[])",1,2,0,0,0,4,0,0,0,0,0,0,4,3
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaAC(boolean,boolean,int,int,int[],int,int,MBType,boolean,int[][])",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.mergeResidual(Picture,int[][][],int[][],int[][])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.io.CAVLC.writeBlockGen(BitWriter,int[],VLC[],int,int,int[],VLC)",2,2,0,0,2,0,0,0,0,0,0,0,2,4
"org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decode(MBlock,Frame[][],Picture,SliceType,boolean)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.io.CAVLC.writeLevels(BitWriter,int[],int,int)",0,5,0,0,1,1,0,0,0,0,0,0,2,5
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlkPic(Picture,Picture,int,int)",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.SliceReader.readIntra16x16(int,MBlock)",1,2,0,0,1,0,0,0,0,0,0,0,1,3
"org.jcodec.codecs.h264.decode.SliceDecoder.putMacroblock(Picture,Picture,int,int)",0,0,0,0,3,0,0,0,0,0,0,0,3,0
"org.jcodec.codecs.h264.io.CAVLC.codeTableLuma(boolean,MBType,int,boolean,MBType,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockIInt(MBlock,Picture)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader.readChromaResidual(MBlock,boolean,boolean,int)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4Chr(int,int,byte[],byte[],int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma4x4(MBlock),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.common.IntArrayList.fill(int,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRoundInt(int[],int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictWithMode(int,int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])",0,0,1,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.decode.FrameReader.readFrame(List<ByteBuffer>),0,2,0,0,0,0,1,0,0,0,0,0,1,2
"org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorder(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)",0,1,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.containers.mp4.boxes.NodeBox.findAllPath(Box,Class<T>,String[])",0,1,0,0,2,0,0,0,0,0,0,0,2,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.writeAC(CAVLC,int,int,BitWriter,int,int,int[][],int,MBType,MBType,int[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.scale.RgbToYuv420j.transform(Picture,Picture)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.common.model.Picture.getPlaneWidth(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.scale.Yuv420pToRgb.transform(Picture,Picture)",2,3,0,0,1,2,0,0,0,0,0,0,3,5
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictVertical(int[][],int,boolean,byte[],byte[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.decode.CoeffTransformer.idct8x8(int[]),0,0,0,0,3,0,0,0,0,0,0,0,3,0
"org.jcodec.codecs.h264.decode.MBlockSkipDecoder.decodeSkip(MBlock,Frame[][],Picture,SliceType)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.common.biari.MDecoder.decodeBin(int),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.jcodec.codecs.h264.decode.CoeffTransformer.reorderDC4x4(int[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.getNextFrame(ByteBuffer),7,1,0,0,0,0,0,0,0,0,0,0,0,8
"org.jcodec.common.dct.SimpleIDCT10Bit.idctCol(int[],int)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
org.jcodec.common.model.Picture.getPlaneData(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.read16x16AC(boolean,boolean,int,int,int[],int,int,int,int)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02UnsafeNoRound(byte[],int,int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceReader.readPredictionI4x4Block(boolean,boolean,MBType,MBType,int,int,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.chroma(Picture,int,int,BitWriter,int,Picture)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.readResidualLuma(MBlock,boolean,boolean,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.fromTrack(AbstractMP4DemuxerTrack),3,2,0,0,0,2,0,0,0,0,0,0,2,5
org.jcodec.common.io.BitReader.read1Bit(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.collectChromaPredictors(DecoderState,Picture,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.io.model.MBType.isIntra(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRound(byte[],int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.common.IntArrayList.add(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.PredictionMerger.mergePrediction(SliceHeader,int,int,PartPred,int,byte[],byte[],int,int,int,int,byte[],Frame[][],int)",1,3,0,0,0,0,0,0,0,0,0,0,0,4
"org.jcodec.codecs.h264.decode.SliceReader.readChromaAC(boolean,boolean,int,int,MBType,int[],int,int,int)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictHorizontal(int[][],int,boolean,byte[],byte[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma01Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveVect(MvList,int,int,int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC4x4(int[],int)",1,0,0,0,0,2,0,0,0,0,0,0,2,1
"org.jcodec.codecs.prores.ProresDecoder.readACCoeffs(BitReader,int[],int[],int,int[],int,int)",0,3,0,0,0,0,0,0,1,0,0,0,1,3
org.jcodec.codecs.h264.H264Utils.gotoNALUnitWithArray(ByteBuffer),1,3,0,0,0,0,0,0,1,1,0,0,2,4
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter16x8(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,int,MvList,PartPred,PartPred,int)",2,0,0,0,2,0,0,0,0,0,0,0,2,2
org.jcodec.common.io.BitReader.readNBit(int),3,0,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.chroma(Picture,int[],int[],int,int,BitWriter,int)",0,0,0,0,4,4,0,0,0,0,0,0,8,0
org.jcodec.common.model.Picture.fill(int),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.takeExtendBorder(byte[],int,int,int,int,byte[],int,int)",0,0,0,0,2,4,0,0,0,0,0,0,6,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceReader.readInter16x8(PartPred,PartPred,MBlock)",0,2,0,0,2,0,0,0,0,0,0,0,2,2
"org.jcodec.codecs.h264.io.write.CAVLCWriter.writeUE(BitWriter,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.CAVLCReader.readZeroBitCount(BitReader,String)",1,0,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma03Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.SliceReader.readRefIdx(boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.decode8x16(MBlock,Picture,Frame[][],PartPred,PartPred)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.common.io.BitWriter.write1Bit(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.leftAvailable(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.decodeSub8x8(MBlock,int,Picture[],int,int,int,int,int,int,boolean,boolean,boolean,boolean,MvList,int,int,int,int,int,Picture,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvsIntra(DeblockerInput,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.H264Encoder.copyCol(byte[],int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.common.IntArrayList.size(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternInter(boolean,boolean,int,int,MBType,MBType)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.predictInter8x16(MBlock,Picture,Picture[][],int,int,boolean,boolean,boolean,boolean,MvList,int,PartPred,PartPred)",2,0,0,0,1,0,0,0,0,0,0,0,1,2
org.jcodec.common.model.Picture.getData(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBDeblocker.filterBs4(int,int,byte[],byte[],int,int,int,int,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.common.biari.MDecoder.decodeBinBypass(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.codecs.h264.decode.CoeffTransformer.fdct4x4(int[]),0,0,0,0,2,0,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.io.CAVLC.readLumaDCBlock(BitReader,int[],int,boolean,MBType,boolean,MBType,int[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.saveMvs(DeblockerInput,MvList,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCInside(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])",1,0,0,0,1,4,0,0,0,0,0,0,5,1
"org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVertical(int[],boolean,byte[],int,int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.prores.ProresDecoder.readCodeword(BitReader,Codebook)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma02NoRound(byte[],int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma10Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.common.model.Picture.planeEquals(Picture,int)",0,1,0,0,1,1,0,0,0,0,0,0,2,1
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.lumaDCPred(int,int,byte[][])",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.scale.RgbToBgr.transform(Picture,Picture)",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.decode(MBlock,Picture)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.write.CAVLCWriter.writeSE(BitWriter,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0(byte[],int,int,byte[],int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.containers.mkv.util.EbmlUtil.toHexString(byte[]),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.jcodec.common.model.Picture.getPlaneHeight(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictPlane(int[][],int,boolean,boolean,byte[],byte[],byte[],byte[])",0,0,0,0,3,1,0,0,0,0,0,0,4,0
"org.jcodec.common.model.Picture.createPicture(int,int,byte[][],ColorSpace)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.model.Picture.getColor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.api.FrameGrab.detectDecoder(SeekableDemuxerTrack),0,0,1,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.common.logging.Logger.message(LogLevel,String,Object[])",3,2,0,0,0,0,1,0,0,0,0,0,1,5
"org.jcodec.codecs.h264.encode.MotionEstimator.sad(byte[],int,byte[],int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.H264Encoder.writeSPS(ByteBuffer,SeqParameterSet)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceDecoder.decodeMBlockP(MBlock,Picture,Frame[][])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictHorizontal(int[],boolean,byte[],byte[],int,int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.common.io.BitReader.readFast16(int),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.api.FrameGrab.createFrameGrab(SeekableByteChannel),1,0,1,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictVertical(int[],boolean,boolean,byte[],byte[],int,int,int,byte[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.SliceDecoder.decode(MBlock,SliceType,Picture,Frame[][])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.calcQpChroma(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.takeSafe(byte[],int,int,int,int,byte[],int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.calcMVPredictionMedian(int,int,int,int,boolean,boolean,boolean,boolean,int,int)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.predictChroma(Picture,int[][],byte[][],int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.mpeg4.MPEG4Bitstream.initVLCTables(),0,0,0,0,2,2,0,0,0,0,0,0,4,0
"org.jcodec.common.dct.SimpleIDCT10Bit.idctRow(int[],int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.common.dct.SimpleIDCT10Bit.idct10(int[],int)",0,0,0,0,2,0,0,0,0,0,0,0,2,0
"org.jcodec.codecs.prores.ProresDecoder.putBlock(byte[],byte[],int,int,int[],int,int,int)",1,0,0,0,1,3,0,0,0,0,0,0,4,1
"org.jcodec.scale.RgbToYuv420p.transform(Picture,Picture)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.common.ArrayUtil.toByteArrayShifted(int...),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.PredictionMerger.weightPrediction(SliceHeader,int,int,byte[],int,int,int,int,byte[])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mp4.demuxer.AbstractMP4DemuxerTrack.nextChunk(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.common.tools.MathUtil.toSigned(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.io.BitReader.checkNBit(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma32Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.containers.mp4.boxes.Header.getFourcc(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.common.IntIntMap.put(int,int)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.decode.SliceReader.setZeroCoeff(int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.raw.RAWVideoEncoder.encodeFrame(Picture,ByteBuffer)",1,0,0,0,0,6,0,0,0,0,0,0,6,1
"org.jcodec.codecs.h264.decode.SliceDecoder.fillCoeff(MBlock,int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.SliceHeaderReader.readPart2(SliceHeader,NALUnit,SeqParameterSet,PictureParameterSet,BitReader)",13,8,0,1,0,0,0,0,0,0,0,0,0,22
org.jcodec.common.io.FileChannelWrapper.read(ByteBuffer),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.model.Picture.getCroppedWidth(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.model.NALUnit.read(ByteBuffer),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.IntObjectMap.size(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagLumaAC(MDecoder,BlockType,int,int,int,MBType,MBType,boolean,boolean,int,int,int,MBType)",2,0,0,1,0,0,0,0,0,0,0,0,0,3
org.jcodec.common.IntArrayList.toArray(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma21(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.writeAC(int,int,int,BitWriter,int,int,int[][],int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.SliceReader.readChromaDC(int,boolean,boolean,int[],int,MBType)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.platform.Platform.arrayEqualsByte(byte[],byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.aac.AACUtils.streamInfoToADTS(ByteBuffer,boolean,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictVerticalRight(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeAC(int[],int)",1,0,0,0,0,2,0,0,0,0,0,0,2,1
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.getIdxBeta(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CAVLC.getCoeffTokenVLCForLuma(boolean,MBType,int,boolean,MBType,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.common.biari.MDecoder.decodeFinalBin(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.common.io.VLCBuilder.set(int,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.mpeg4.MPEG4DCT.idctRows(short[]),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.common.io.BitReader.check16Bits(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.MBlockDecoderIntra16x16.residualLumaI16x16(MBlock,boolean,boolean,int,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.codecs.h264.decode.SliceReader.getNALUnit(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.readResidualInter(MBlock,boolean,boolean,int,int)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.io.CAVLC.writeChrDCBlock(BitWriter,int[],VLC[],int,int,int[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBEncoderHelper.putBlk(byte[],int[],byte[],int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderP16x16.median(int,int,int,int,boolean,boolean,boolean,boolean)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.common.model.Picture.cropSub(byte[],int,int,int,int,int,int,byte[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.decode.SliceReader.readMBlockI(MBlock),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictDCTopBorder(int[][],int,int,int,boolean,boolean,byte[],byte[],byte[])",1,0,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.fulpel16x16(byte[],byte[],int,int,int,int,int)",1,0,0,0,0,4,0,0,0,0,0,0,4,1
"org.jcodec.codecs.h264.decode.MBlockDecoderUtils.savePrediction8x8(DecoderState,int,MvList)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CABAC.readRefIdx(MDecoder,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)",1,1,0,1,2,1,0,0,0,0,0,0,3,3
"org.jcodec.common.io.NIOUtils.read(ByteBuffer,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.BoxFactory.newBox(Header),2,1,0,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.H264Encoder.collectPredictors(Picture,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.predictWithMode(int,int[],boolean,boolean,boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])",0,0,1,0,2,0,0,0,0,0,0,0,2,1
"org.jcodec.api.transcode.filters.ColorTransformFilter.filter(Picture,PixelStore)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.png.PNGDecoder.filterPaeth(byte[],int,byte[],int)",0,1,0,3,2,0,0,0,0,0,0,0,2,4
org.jcodec.codecs.h264.H264Encoder.putLastMBLine(),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictVertical(int[][],boolean,byte[],int,byte[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.common.io.BitReader.checkNBitDontCare(int),0,0,0,0,0,0,0,0,1,0,0,0,1,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.encodeMacroblock(Picture,int,int,BitWriter,EncodedMB,EncodedMB,EncodedMB,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mxf.model.UL.toString(),1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.mpeg12.MPEGPredOct.getPix6(byte[],int,int,int,int,int,int,int[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.decodeChromaResidual(MBlock,boolean,boolean,int,int,int,int)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC4x4(int[],int,int[])",1,2,0,0,0,4,0,0,0,0,0,0,4,3
"org.jcodec.codecs.h264.BufferH264ES.detectPoc(ByteBuffer,NALUnit,SliceHeader)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.containers.mp4.boxes.MetaBox.getKeyedMeta(),1,3,0,0,0,0,1,0,0,0,0,0,1,4
org.jcodec.common.dct.SparseIDCT.finish(int[]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.encode.MBDeblocker.deblockBorderChroma(int[],int,byte[],int,byte[],int,int[][],int[][],boolean)",0,1,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CAVLC(MBlock,boolean,boolean,int,int)",0,1,0,0,1,2,0,0,0,0,0,0,3,1
org.jcodec.containers.mp3.MPEGAudioDemuxer.validHeader(int),4,0,0,0,0,0,0,0,0,0,0,0,0,4
org.jcodec.codecs.h264.decode.aso.FlatMBlockMapper.topRightAvailable(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.common.StringUtils.splitC(String,char)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.SliceReader.readMBlockP(MBlock),0,0,1,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.JCodecUtil2.readBER32(ByteBuffer),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.common.io.BitReader.readInt(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.io.BitReader.skip(int),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.common.model.Picture.getHeight(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.model.SeqParameterSet.readVUIParameters(BitReader),9,2,0,0,0,0,0,0,0,0,0,0,0,11
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle16Safe(byte[],byte[],int,int,int,int)",0,0,0,0,1,4,0,0,0,0,0,0,5,0
org.jcodec.containers.mxf.model.KLV.readKL(SeekableByteChannel),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mp4.muxer.CodecMP4MuxerTrack.addFrame(Packet),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.mpeg4.MPEG4Bitstream.readBi(BitReader,MPEG4DecodingContext,int,int,Macroblock,Macroblock,Vector,Vector)",1,7,1,0,0,0,0,0,0,0,0,0,0,9
"org.jcodec.codecs.prores.ProresToThumb2x2.putGroup(byte[],byte[],int,int[],int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.h264.io.CABAC.readSubMbTypeP(MDecoder),1,0,0,1,0,0,0,0,0,0,0,0,0,2
org.jcodec.common.io.BitReader.bitsToAlign(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.CAVLC.totalCoeff(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpeg4.MPEG4Bitstream.checkResyncMarker(BitReader,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.api.transcode.VideoFrameWithPacket.compareTo(VideoFrameWithPacket),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.io.DummyBitstreamReader.read1BitInt(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.mpeg4.MPEG4Bitstream.readInterModeCoeffs(BitReader,MPEG4DecodingContext,int,Macroblock,Macroblock,Macroblock,Macroblock,Macroblock)",1,11,0,0,0,0,0,0,0,0,0,0,0,12
"org.jcodec.common.Assert.assertEquals(int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader.readIntra8x16(PartPred,PartPred,MBlock)",0,2,0,0,2,0,0,0,0,0,0,0,2,2
org.jcodec.common.io.BitWriter.position(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.CoeffTransformer.quantizeDC2x2(int[],int)",1,0,0,0,0,2,0,0,0,0,0,0,2,1
"org.jcodec.containers.mxf.model.KLV.readKLFromBuffer(ByteBuffer,long)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.prores.ProresDecoder.decodeSlice(ByteBuffer,int[],int[],int[],int,int,int,short,byte[][],byte[][],int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.model.SeqParameterSet.read(ByteBuffer),5,2,0,0,0,1,0,0,0,0,0,0,1,7
"org.jcodec.codecs.h264.decode.PredictionMerger.weight(byte[],int,int,int,int,int,int,int,byte[])",1,0,0,0,0,2,0,0,0,0,0,0,2,1
"org.jcodec.codecs.png.PNGDecoder.filterUp(byte[],int,byte[])",0,0,0,3,1,0,0,0,0,0,0,0,1,3
org.jcodec.codecs.h264.io.model.RefPicMarkingIDR.isUseForlongTerm(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CAVLC.writeTrailingOnes(BitWriter,int[],int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.common.ArrayUtil.sumByte3(byte[],int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.mpa.ChannelSynthesizer.synthesize(float[],short[],int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.tools.MathUtil.log2(int),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.BufferH264ES.calcPoc(int,NALUnit,SliceHeader)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.mpa.Mp3Decoder.mdctDecode(int,Granule,float[])",0,1,0,0,1,3,0,0,0,0,0,0,4,1
"org.jcodec.codecs.h264.decode.CoeffTransformer.dequantizeDC2x2(int[],int,int[])",1,1,0,0,0,3,0,0,0,0,0,0,3,2
"org.jcodec.containers.mkv.SeekHeadFactory.estimeteSeekSize(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderBase.chromaDC(int,boolean,boolean,int[],int,int,MBType)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma23(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.common.io.BitReader.nextIgnore(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CABAC.readCodedBlockFlagChromaDC(MDecoder,int,int,MBType,MBType,boolean,boolean,int,int,MBType)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.io.CAVLC.writeRuns(BitWriter,int[],int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.h264.io.CABAC.readMBSkipFlag(MDecoder,SliceType,boolean,boolean,int)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.prores.ProresEncoder.writeACCoeffs(BitWriter,int[],int[],int,int[],int)",0,1,0,0,1,1,0,0,0,0,0,0,2,1
"org.jcodec.codecs.h264.io.CABAC.readCoeffAbsLevel(MDecoder,BlockType,int,int)",1,0,0,1,1,1,0,0,0,0,0,1,3,2
org.jcodec.common.IntIntMap.createArray(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpa.MpaPqmf.computeFilter(int,float[],short[],int,float)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.containers.mp3.MPEGAudioDemuxer.skipJunk(),0,2,0,0,0,0,0,0,1,0,0,0,1,2
"org.jcodec.codecs.h264.H264Decoder.decodeFrame(ByteBuffer,byte[][])",0,0,0,1,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.tools.Debug.trace(Object...),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader.readChromaPredMode(int,boolean,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.model.Rect.getWidth(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.AutoFileChannelWrapper.read(ByteBuffer),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma30(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.containers.mkv.MKVType.createById(byte[],long)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.mpa.Mp3Bitstream.readCoeffs(BitReader,Granule,int,int,int,int[])",2,2,0,0,1,0,0,0,1,0,0,0,2,4
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrackMeta.getCodecPrivate(AbstractMP4DemuxerTrack),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.H264Encoder.encodeMacroblock(MBType,Picture,int,int,BitWriter,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.aac.ADTSParser.read(ByteBuffer),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaX0Unsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.decode.CAVLCReader.readSE(BitReader,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.CABAC.prev4x4PredModeFlag(MDecoder),0,0,0,1,0,0,0,0,0,0,0,0,0,1
"org.jcodec.containers.mp4.boxes.NodeBox.findFirstPath(NodeBox,Class<T>,String[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.scale.LanczosResampler.buildTaps(int,int,double,short[][])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.containers.mp4.boxes.NodeBox.findFirst(NodeBox,Class<T>,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CAVLC.readChromaDCBlock(BitReader,int[],boolean,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk1(int,int,int,byte[])",1,0,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.containers.mp3.MPEGAudioDemuxer.calcFrameSize(int),0,0,1,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader.readInter16x16(PartPred,MBlock)",0,1,0,0,2,0,0,0,0,0,0,0,2,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma22(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.decode.SliceDecoder.decodeFromReader(SliceReader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.png.PNGDecoder.filterAvg3(byte[],byte[],int)",0,0,0,3,1,0,0,0,0,0,0,0,1,3
"org.jcodec.codecs.h264.H264Const.usesList(PartPred,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.readSub8x8(MBlock,int,boolean,boolean,int,int,int,MBType,MBType,PartPred,PartPred,PartPred,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mkv.MKVParser.nextElement(),1,0,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.transform(Picture,int,int[][],byte[][],int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.scale.BaseResampler.getPel(Picture,int,int,int)",4,0,0,0,0,0,0,0,0,0,0,0,0,4
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CAVLC(MBlock),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.MBlockDecoderBDirect.predictBSpatialDirect(Frame[][],int,int,boolean,boolean,boolean,boolean,MvList,PartPred[],Picture,int[])",1,5,0,0,1,3,0,0,0,0,0,0,4,6
"org.jcodec.codecs.h264.io.CABAC.readMBQpDelta(MDecoder,MBType)",1,1,0,1,0,0,0,0,0,1,0,0,1,3
"org.jcodec.scale.BaseResampler.normalizeAndGenerateFixedPrecision(double[],int,short[])",0,2,0,0,3,1,0,0,1,0,0,0,5,2
org.jcodec.containers.mkv.boxes.MkvBlock.read(ByteBuffer),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.common.IntObjectMap.keys(),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.codecs.h264.decode.CoeffTransformer.invDC2x2(int[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma20NoRoundInt(int[],int,int[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.mpa.MpaHeader.calculateFramesize(MpaHeader),1,5,0,0,0,0,0,0,0,0,0,0,0,6
"org.jcodec.platform.Platform.newInstance(Class<T>,Object[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.containers.mp4.demuxer.MP4DemuxerTrack.nextFrame(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mkv.MKVType.values(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.boxes.MovieBox.getMovieHeader(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.boxes.Box.path(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.encode.DumbRateControl.accept(int),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChromaXXUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.containers.mp4.ChunkWriter.write(Chunk),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.RefListManager.getRefList(),2,1,0,1,0,1,0,0,0,0,0,0,1,4
"org.jcodec.codecs.png.PNGDecoder.decodeData(IHDR,PLTE,TRNS,List<ByteBuffer>,byte[][])",0,10,0,3,1,8,0,0,0,0,0,0,9,13
"org.jcodec.common.io.NIOUtils.fetchFromChannel(ReadableByteChannel,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.model.SeqParameterSet.getPicHeightInMbs(SeqParameterSet),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.H264Utils.wipePSinplace(ByteBuffer,Collection<ByteBuffer>,Collection<ByteBuffer>)",0,4,0,0,0,0,0,0,1,0,0,0,1,4
"org.jcodec.codecs.h264.decode.SliceReader.readCodedBlockPatternIntra(boolean,boolean,int,int,MBType,MBType)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.H264Utils.saveCodecPrivate(List<ByteBuffer>,List<ByteBuffer>)",0,0,0,0,0,0,4,0,0,0,0,0,4,0
"org.jcodec.codecs.mpeg4.MPEG4Bitstream.packCoeff(int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.png.PNGDecoder.filterSub4(byte[],byte[],int)",0,0,0,3,1,0,0,0,0,0,0,0,1,3
org.jcodec.codecs.h264.encode.MBEncoderI16x16.transformChroma(int[][]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.common.model.ColorSpace.calcBitsPerPixel(),0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.containers.mp4.boxes.TrakBox.getCodedSize(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.SliceReader.read16x16DC(boolean,boolean,int,int[])",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.containers.mp4.boxes.UdtaBox.setFactory(IBoxFactory),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.codecs.mpeg4.MPEG4BiRenderer.mergePred(Macroblock),0,0,0,0,2,1,0,0,0,0,0,0,3,0
"org.jcodec.scale.Yuv420pToRgb.YUV420pToRGBN2N(byte,byte,byte,byte[],int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.common.io.NIOUtils.skip(ByteBuffer,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.H264Encoder.encodeFrame(Picture,ByteBuffer)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.containers.mp4.boxes.AudioSampleEntry.getEndian(),1,1,0,2,0,0,0,0,0,0,0,0,0,4
"org.jcodec.codecs.h264.io.CABAC.codedBlockPatternIntra(MDecoder,boolean,boolean,int,int,MBType,MBType)",0,0,0,1,0,0,0,0,0,0,0,0,0,1
"org.jcodec.platform.Platform.arrayEqualsObj(Object[],Object[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.decode.MBlock.cbpLuma(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle8(byte[],int,byte[],int,int,int,int,int,int,int)",1,0,0,0,0,6,0,0,0,0,0,0,6,1
"org.jcodec.codecs.h264.io.CABAC.readMVD(MDecoder,int,boolean,boolean,MBType,MBType,PartPred,PartPred,PartPred,int,int,int,int,int,int)",1,1,0,1,3,1,0,0,0,0,0,1,5,3
org.jcodec.codecs.h264.decode.MBlockDecoderBase.initScalingMatrix(SliceHeader),9,2,0,0,1,0,0,0,0,0,0,0,1,11
"org.jcodec.codecs.h264.decode.PredictionMerger.mergeWeight(byte[],byte[],int,PartPred,int,int,int,int,int,int,int,int,byte[])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.merge(byte[],byte[],int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.encode.EncodedMB.getMx(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.io.FileChannelWrapper.setPosition(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.IntIntMap.get(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.copyAdd(byte[],int,int[],int,int,byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.prores.ProresToThumb2x2._putChroma(byte[],byte[],int,int,int,int,int[],int,int,int)",1,0,0,0,1,3,0,0,0,0,0,0,4,1
"org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictHorizontal(int[][],boolean,byte[],int,byte[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.containers.mp4.boxes.AudioSampleEntry.getFormat(),0,0,0,2,0,0,0,0,0,0,0,0,0,2
org.jcodec.common.dct.IntDCT.prepare_range_limit_table(),0,0,0,0,6,0,0,0,0,0,0,0,6,0
"org.jcodec.containers.mp3.MPEGAudioDemuxer.getField(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.io.CABAC.readIntraChromaPredMode(MDecoder,int,MBType,MBType,boolean,boolean)",1,0,0,1,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma12Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.common.io.BitWriter.writeNBit(int,int)",3,1,0,0,0,0,0,0,0,0,0,0,0,4
"org.jcodec.codecs.h264.decode.SliceReader.readPredictionInter16x8(MBlock,int,boolean,boolean,PartPred,PartPred,int)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.jcodec.containers.mps.MPSUtils.mpeg2Pes(int,int,int,ByteBuffer,long)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.raw.RAWVideoDecoder.copy(ByteBuffer,byte[],int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.common.dct.IDCT2x2.idct(int[],int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.vertMiddle8Safe(byte[],int,byte[],int,int,int,int)",0,0,0,0,1,2,0,0,0,0,0,0,3,0
org.jcodec.common.model.Picture.getLowBitsNum(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.SliceReader.readLuma8x8CABAC(MBlock,int,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.mpeg4.MPEG4Decoder.decodeIFrame(BitReader,MPEG4DecodingContext,byte[][])",0,3,0,1,1,1,0,0,0,0,0,0,2,4
org.jcodec.containers.mp4.boxes.Box.write(ByteBuffer),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.model.SliceType.isInter(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.boxes.NodeBox.getBoxes(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra16x16PredictionBuilder.predictPlane(int[][],boolean,boolean,byte[],byte[],byte[],int,byte[])",0,0,0,0,3,1,0,0,0,0,0,0,4,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.common.biari.MDecoder.readOneByte(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.Intra8x8PredictionBuilder.interpolateTop(boolean,boolean,byte[],byte[],int,int,byte[])",1,0,0,0,1,2,0,0,0,0,0,0,3,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma11(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.io.DummyBitstreamReader.readNBit(int),1,0,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.containers.mxf.model.UL.equals(Object),1,0,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.codecs.h264.decode.MBlockDecoderBase.residualLuma8x8CABAC(MBlock),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.SliceReader.readSubMb8x8(MBlock,int,int,boolean,boolean,int,int,int,MBType,MBType,MBType,PartPred,PartPred,PartPred,int)",0,0,1,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.containers.mkv.CuesFactory.estimateCuePointSize(int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.interpolate16x16QP(byte[],byte[],int,int,int,int,int,int,int,boolean)",2,0,1,0,0,0,0,0,0,0,0,0,0,3
"org.jcodec.codecs.h264.decode.deblock.DeblockingFilter.mvThresh(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.mpeg4.MPEG4DCT.idctPut(byte[][],short[][],boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mp4.boxes.MediaHeaderBox.parse(ByteBuffer),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.putChroma(byte[],int,int,int,int[][],byte[][])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlockDecoderInter.calcMVPrediction16x8Top(int,int,int,int,boolean,boolean,boolean,boolean,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.containers.mp3.MPEGAudioDemuxer.readFrame(ByteBuffer),0,2,0,0,0,0,0,0,1,0,0,0,1,2
"org.jcodec.codecs.mpeg4.MPEG4Renderer.renderMBInter(MPEG4DecodingContext,Picture[],Macroblock,int,boolean)",2,3,0,0,1,1,0,0,0,0,0,0,2,5
"org.jcodec.codecs.mpeg4.MPEG4Interpolator.horzMiddle16(byte[],byte[],int,int,int,int,int,int,int)",1,0,0,0,0,10,0,0,0,0,0,0,10,1
org.jcodec.containers.mp4.MP4Util.getRootAtoms(SeekableByteChannel),0,1,0,0,0,0,0,0,1,0,0,0,1,1
org.jcodec.codecs.h264.decode.CoeffTransformer.fvdDC4x4(int[]),0,0,0,0,2,0,0,0,0,0,0,0,2,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.restorePlane(int[],int[][],int)",1,0,0,0,1,0,0,0,0,0,0,0,1,1
org.jcodec.containers.mxf.model.UL.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.H264Utils.skipToNALUnit(ByteBuffer),1,1,0,0,0,0,0,0,1,0,0,0,1,2
org.jcodec.containers.mp4.boxes.TimeToSampleBox.parse(ByteBuffer),0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.codecs.h264.H264Utils.isByteBufferIDRSlice(ByteBuffer),0,1,0,0,0,0,0,0,1,0,0,0,1,1
"org.jcodec.codecs.h264.encode.MBEncoderHelper.take(byte[],int,int,int,int,byte[],int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.common.dct.SimpleIDCT10Bit.fdctProres10(int[],int)",0,0,0,0,2,4,0,0,0,0,0,0,6,0
"org.jcodec.codecs.mpa.Mp3Decoder.dequantShort(int[],int,Granule,ScaleFactors,float,float[])",0,0,0,0,1,2,0,0,0,0,0,0,3,0
org.jcodec.containers.mp4.boxes.TrakBox.getTrackType(TrakBox),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.MBlock.cbp(int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma00Unsafe(byte[],int,int,byte[],int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.containers.mp4.boxes.TrakBox.getEdits(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.H264Decoder.createFrame(SeqParameterSet,byte[][],int,SliceType,MvList2D,Frame[][][],int)",1,0,0,1,0,0,0,0,0,0,0,0,0,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0XUnsafe(byte[],int,int,byte[],int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
"org.jcodec.codecs.mpeg4.MPEG4Bitstream.readCoeffIntra(BitReader,MPEG4DecodingContext,Macroblock,Macroblock,Macroblock,Macroblock)",0,5,0,0,1,0,0,0,0,0,0,0,1,5
"org.jcodec.common.StringUtils.splitWorker(String,char,boolean)",3,2,0,0,0,0,0,0,1,0,0,0,1,5
"org.jcodec.codecs.h264.BufferH264ES.readSliceHeader(ByteBuffer,NALUnit)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictDiagonalDownLeft(int[],boolean,boolean,byte[],int,int,int,byte[])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.BlockInterpolator.getLuma33(byte[],int,byte[],int,int,int,int,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.common.model.Picture.equals(Object),2,0,0,0,1,0,0,0,0,0,0,0,1,2
org.jcodec.codecs.h264.io.model.NALUnitType.fromValue(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.codecs.h264.io.CAVLC.trailingOnes(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.jcodec.containers.mp4.muxer.MP4MuxerTrack.finish(MovieHeaderBox),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.jcodec.common.model.Picture.getCrop(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.codecs.png.PNGDecoder.filterSub1(byte[],byte[],int)",0,0,0,3,1,0,0,0,0,0,0,0,1,3
"org.jcodec.codecs.h264.H264Encoder.doEncodeFrame(Picture,ByteBuffer,boolean,int,SliceType)",2,0,0,0,1,0,0,0,0,0,0,0,1,2
org.jcodec.containers.mp4.muxer.MP4MuxerTrack.outChunkIfNeeded(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.jcodec.codecs.h264.decode.Intra4x4PredictionBuilder.predictHorizontalDown(int[],boolean,boolean,byte[],byte[],byte[],int,int,int,byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.common.dct.DCTRef.fdct(int[],int)",0,0,0,0,2,4,0,0,0,0,0,0,6,0
"org.jcodec.codecs.h264.encode.MBEncoderI16x16.chromaPredBlk2(int,int,int,byte[])",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"org.jcodec.codecs.h264.decode.ChromaPredictionBuilder.predictWithMode(int[][],int,int,boolean,boolean,byte[],byte[],byte[],byte[])",0,0,1,0,0,0,0,0,0,0,0,0,0,1
org.jcodec.common.model.Picture.fromPictureHiBD(PictureHiBD),1,0,0,0,1,3,0,0,0,0,0,0,4,1
org.jcodec.codecs.h264.decode.SliceHeaderReader.readReorderingEntries(BitReader),0,1,0,1,0,0,0,0,0,0,1,0,1,2
"org.jcodec.codecs.h264.decode.MBlockDecoderInter8x8.predict8x8P(MBlock,Picture[],Picture,boolean,int,int,boolean,boolean,boolean,boolean,MvList,PartPred[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.jcodec.codecs.mpa.Mp3Decoder.decodeMsStereo(MpaHeader,Granule,ScaleFactors[],float[][])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.jcodec.codecs.h264.decode.FrameReader.addPps(ByteBuffer),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.jcodec.scale.BicubicResampler.buildFilterTaps(int,int)",0,2,0,0,1,1,0,0,0,0,0,0,2,2
"org.jcodec.codecs.h264.decode.BlockInterpolator.getChroma0X(byte[],int,int,byte[],int,int,int,int,int,int,int)",0,0,0,0,1,1,0,0,0,0,0,0,2,0
org.jcodec.codecs.h264.io.model.Frame.copyFromFrame(Frame),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.RunnerBuilder.runners(Class<?>[]),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.runners.BlockJUnit4ClassRunner.createTest(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.validateTestMethods(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.Checks.notNull(T,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.theories.internal.AllMembersSupplier.getSingleDataPointMethods(ParameterSignature),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.validate(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getInjectionType(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.JUnit4ClassRunner.run(RunNotifier),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.ParentRunner.classBlock(RunNotifier),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.Result.createListener(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.notification.RunNotifier.fireTestSuiteStarted(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxHistory.readHistory(File),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.printFooter(Result),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.runners.model.FrameworkMethod.invokeExplosively(Object,Object...)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.notification.SynchronizedRunListener.testFinished(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.TestClass.getAnnotatedMembers(Map<Class<?extendsAnnotation>,List<T>>,Class<?extendsAnnotation>,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.Throwables.getFullStackTrace(Throwable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.FrameworkMethod.validatePublicVoidNoArg(boolean,List<Throwable>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.theories.internal.Assignments.generateAssignmentsFromTypeAlone(ParameterSignature),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.BlockJUnit4ClassRunner.collectInitializationErrors(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.TestClass.collectAnnotatedMethodValues(Object,Class<?extendsAnnotation>,Class<T>,MemberValueConsumer<T>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.experimental.max.MaxHistory.testComparator(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.requests.MemoizingRequest.getRunner(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.runners.ParentRunner.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestSuite.addTest(Test),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.RunnerBuilder.removeParent(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.validateConstructor(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.ParentRunner.order(Orderer),0,1,0,0,0,0,0,2,0,0,0,0,2,1
org.junit.runner.Request.filterWith(Filter),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.ComparisonFailure.getMessage(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.suiteMethodBuilder(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.SuiteMethod.testFromSuiteMethod(Class<?>),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.model.TestClass.getAnnotatedMethods(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkMethod.validateNoTypeParametersOnArgs(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(String,String,String)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.runner.notification.RunNotifier.fireTestRunFinished(Result),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.RunBefores.evaluate(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.junit.experimental.theories.ParameterSignature.signatures(Class<?>[],Annotation[][])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.junit.runner.notification.SynchronizedRunListener.testSuiteStarted(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.RunAfters.evaluate(),0,0,0,0,0,0,0,1,0,0,0,0,1,0
junit.framework.TestSuite.testAt(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.requests.FilterRequest.getRunner(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.TestClass.collectAnnotatedFieldValues(Object,Class<?extendsAnnotation>,Class<T>,MemberValueConsumer<T>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
"org.junit.runner.JUnitCommandLineParseResult.copyArray(String[],int,int)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.ignoredBuilder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.ExpectException.evaluate(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.JUnitCore.main(String...),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.JUnitCommandLineParseResult.createRequest(Computer),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.model.FrameworkMember.isPublic(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.FailOnTimeout.builder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit38ClassRunner.filter(Filter),1,2,0,0,0,1,0,0,0,0,0,0,1,3
org.junit.experimental.theories.ParameterSignature.buildConvertableTypesMap(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestCase.countTestCases(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestAdapterCache.createTest(Description),1,0,0,0,0,0,0,1,0,0,0,0,1,1
org.junit.runners.model.FrameworkMethod.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit38ClassRunner.createAdaptingListener(RunNotifier),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedException.expectMessage(Matcher<String>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.FailOnTimeout.getThreadsInGroup(ThreadGroup),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.junit.runners.ParentRunner.createTestClass(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestCase.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.validator.AnnotationValidatorFactory.createAnnotationValidator(ValidateWith),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.notification.SynchronizedRunListener.testSuiteFinished(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Request.classWithoutSuiteMethod(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.categories.Categories.isAnyExcluded(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertThrows(String,Class<T>,ThrowingRunnable)",0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.results.ResultMatchers.failureCountIs(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runner.Description.createTestDescription(Class<?>,String,Annotation...)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.Parameterized.validatePublicStaticVoidMethods(Class<?extendsAnnotation>,Integer,List<Throwable>)",0,2,0,0,0,0,1,0,0,0,0,0,1,2
org.junit.rules.TemporaryFolder.createTemporaryFolderIn(File),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.junit.rules.TestWatchman.apply(Statement,FrameworkMethod,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.BooleanSupplier.getValueSources(ParameterSignature),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.TestClass.getSuperClasses(Class<?>),0,0,0,0,0,0,0,0,1,0,0,0,1,0
junit.framework.TestSuite.warning(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.results.ResultMatchers.hasFailureContaining(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.validatePublicConstructor(List<Throwable>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTest(),0,0,1,0,0,0,0,0,0,0,0,0,0,1
"org.junit.runner.Computer.getRunner(RunnerBuilder,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.TestClass.getAnnotatedFieldValues(Object,Class<?extendsAnnotation>,Class<T>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.RuleContainer.setOrder(Object,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestAdapter.getDescription(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.MethodValidator.assertValid(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnType(Type,List<Throwable>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.textui.ResultPrinter.printFooter(TestResult),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.rules.ErrorCollector.checkThat(String,T,Matcher<T>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.extensions.ActiveTestSuite.waitUntilFinished(),0,0,0,0,0,0,0,0,1,0,0,0,1,0
org.junit.runner.JUnitCommandLineParseResult.applyFilterSpecs(Request),0,0,0,0,0,0,0,1,0,0,0,0,1,0
org.junit.internal.runners.MethodRoadie.addFailure(Throwable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runner.Description.createSuiteDescription(String,Annotation...)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.MethodSorter.getSorter(FixMethodOrder),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.model.TestClass.getSortedDeclaredFields(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runner.JUnitCore.run(Computer,Class<?>...)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkMethod.getAnnotations(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.TestClass.getAnnotatedFields(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestSuite.isPublicTestMethod(Method),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkField.getAnnotation(Class<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.Verifier.apply(Statement,Description)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkField.getField(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.runner.BaseTestRunner.filterLine(String),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.junit.runners.BlockJUnit4ClassRunner.validateOnlyOneConstructor(List<Throwable>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.Assert.assertEquals(long,long)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertArrayEquals(String,float[],float[],float)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.JUnitCore.removeListener(RunListener),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointFields(ParameterSignature),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.runner.notification.SynchronizedRunListener.equals(Object),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.runners.model.FrameworkField.get(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit3Builder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.TemporaryFolder.builder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.getTimeout(Test),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.experimental.theories.PotentialAssignment.forValue(String,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.extensions.TestSetup.run(TestResult),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.testName(FrameworkMethod),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.categories.CategoryFilterFactory.parseCategories(String),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.runner.Description.getChildren(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.runner.BaseTestRunner.getFilteredTrace(String),1,1,0,0,0,0,0,0,0,1,0,0,1,2
org.junit.runners.model.FrameworkField.getModifiers(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Description.isEmpty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertNotNull(String,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxCore.buildRunner(Description),4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.junit.Assert.assertEquals(String,long,long)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.TestClass.getAnnotatedMethods(Class<?extendsAnnotation>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertThat(T,Matcher<?superT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.equalsRegardingNull(Object,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.ParentRunner.comparator(Sorter),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertTrue(String,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.TestCase.setName(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.NoGenericTypeParametersValidator.validate(List<Throwable>),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.junit.runners.Suite.runChild(Runner,RunNotifier)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedException.missingExceptionMessage(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestSuite.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxHistory.isNewTest(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.categories.Categories.hasAssignableTo(Set<Class<?>>,Class<?>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
junit.runner.BaseTestRunner.getTest(String),2,1,0,0,0,0,0,0,0,0,0,0,0,3
"org.junit.runner.manipulation.Ordering.definedBy(Ordering.Factory,Description)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.experimental.theories.suppliers.TestedOnSupplier.getValueSources(ParameterSignature),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.runner.notification.RunListener.testSuiteFinished(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkMethod.getModifiers(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.internal.ParameterizedAssertionError.join(String,Collection<Object>)",0,1,0,0,0,0,0,0,1,0,0,0,1,1
org.junit.runner.manipulation.Orderer.order(Collection<Description>),3,0,0,0,0,0,0,0,0,0,0,0,0,3
org.junit.experimental.theories.internal.EnumSupplier.getValueSources(ParameterSignature),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.experimental.categories.Categories.getExcludedCategory(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.FailOnTimeout.getStuckThread(Thread),1,2,0,0,0,0,1,0,0,0,0,0,1,3
org.junit.runners.model.FrameworkField.getType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.MethodRoadie.runTest(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.categories.IncludeCategories.createFilter(List<Class<?>>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.format(String,Object,Object)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.junit.rules.RunRules.applyAll(Statement,Iterable<TestRule>,Description)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.runner.notification.Failure.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.createTest(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.TestClass.getAnnotatedMethodValues(Object,Class<?extendsAnnotation>,Class<T>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.elapsedTimeAsString(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.testName(FrameworkMethod),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.builders.AllDefaultPossibilitiesBuilder.junit4Builder(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.TestWithParameters.equals(Object),3,0,0,0,0,0,0,0,0,0,0,0,0,3
org.junit.rules.ExpectedExceptionMatcherBuilder.build(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.ParameterSignature.findDeepAnnotation(Annotation[],Class<T>,int)",1,2,0,0,0,0,1,0,0,0,0,0,1,3
org.junit.internal.runners.TestClass.getConstructor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.Stopwatch.runtime(TimeUnit),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.matchers.ThrowableCauseMatcher.hasCause(Matcher<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestAdapterCache.asTestList(Description),1,0,0,0,0,0,0,1,0,0,0,0,1,1
org.junit.rules.ErrorCollector.addError(Throwable),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.internal.Checks.notNull(T),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.builders.AnnotatedBuilder.getEnclosingClassForNonStaticMemberClass(Class<?>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.ErrorReportingRunner.run(RunNotifier),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.internal.Throwables.asReversedList(List<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.ArrayComparisonFailure.getMessage(),1,0,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.rules.DisableOnDebug.isDebugging(List<String>),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.internal.management.ManagementFactory.getThreadMXBean(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkField.isShadowedBy(FrameworkField),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.internal.AllMembersSupplier.addIterableValues(ParameterSignature,String,List<PotentialAssignment>,Iterable<?>)",0,1,0,0,0,0,0,0,1,0,0,0,1,1
org.junit.runner.manipulation.Sorter.apply(Object),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.Assert.failEquals(String,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.Assert.assertNull(String,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.manipulation.Filter.matchMethodDescription(Description),1,1,0,0,0,0,1,0,0,0,0,0,1,2
junit.framework.ComparisonCompactor.findCommonPrefix(),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.junit.runner.JUnitCore.defaultComputer(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.ParameterSignature.getAnnotation(Class<T>),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.internal.runners.JUnit4ClassRunner.getDescription(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.experimental.theories.internal.ParameterizedAssertionError.equals(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.internal.Assignments.allUnassigned(Method,TestClass)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.ParameterSignature.signatures(Method),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedExceptionMatcherBuilder.allOfTheMatchers(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.runner.Description.createTestDescription(String,String,Serializable)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.failNotEquals(String,Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.InexactComparisonCriteria.assertElementsEqual(Object,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.runner.BaseTestRunner.getPreferencesFile(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.getWriter(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.statements.Fail.evaluate(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.TestClass.isANonStaticInnerClass(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxHistory.forFolder(File),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.runners.Enclosed.filterAbstractClasses(Class<?>[]),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.runner.Description.isSuite(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.TemporaryFolder.newFolder(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.testRunFinished(Result),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Description.createSuiteDescription(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxCore.sortRequest(Request),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.RuleContainer.add(MethodRule),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.printHeader(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.notification.SynchronizedRunListener.testRunStarted(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Runner.testCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.ErrorReportingRunner.getCauses(Throwable),4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointMethods(ParameterSignature,List<PotentialAssignment>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.rules.TemporaryFolder.recursiveDelete(File),2,1,0,0,0,0,0,1,0,0,0,0,1,3
"org.junit.experimental.categories.CategoryValidator.addErrorMessage(List<Exception>,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.TestWithParameters.getParameters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.Throwables.rethrowAsException(Throwable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.Assert.assertNull(Object),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"junit.framework.Assert.assertEquals(String,double,double,double)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.rules.TemporaryFolder.newFile(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.TestResult.errorCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.results.PrintableResult.testResult(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestCaseFacade.countTestCases(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.TestMethod.getAfters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.Assignments.buildParameterSupplierFromClass(Class<?extendsParameterSupplier>),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.junit.experimental.theories.internal.SpecificDataPointsSupplier.getSingleDataPointMethods(ParameterSignature),0,1,0,0,0,0,1,0,0,0,0,0,1,1
"org.junit.experimental.theories.ParameterSignature.isAssignableViaTypeConversion(Class<?>,Class<?>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.matchers.ThrowableCauseMatcher.describeTo(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.textui.ResultPrinter.endTest(Test),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.AssumptionViolatedException.describeTo(Description),2,2,0,0,0,0,0,0,0,0,0,0,0,4
org.junit.runner.Result.getFailures(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestResult.addListener(TestListener),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(AssumptionViolatedException),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.Assignments.getArgumentStrings(boolean),0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.junit.rules.TemporaryFolder.delete(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.rules.Stopwatch.starting(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertEquals(String,float,float,float)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.JUnit4TestAdapter.getTests(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.failNotEquals(String,Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.Timeout.apply(Statement,Description)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.matchers.ThrowableMessageMatcher.matchesSafely(T),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(String,long,long)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.failNotSame(String,Object,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.TestFailure.exceptionMessage(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestResult.runCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.TestClass.getAfters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.FilterFactories.createFilterFactory(Class<?extendsFilterFactory>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkMember.self(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.extensions.RepeatedTest.run(TestResult),0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.junit.internal.runners.TestClass.getBefores(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Result.wasSuccessful(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.ParameterSignature.hasAnnotation(Class<?extendsAnnotation>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.Assignments.potentialsForNextUnassigned(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.ComparisonCompactor.compactString(String),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.experimental.theories.internal.AllMembersSupplier.getValueSources(ParameterSignature),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.testAnnotations(Method),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assert.assertTrue(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnParameterizedType(ParameterizedType,List<Throwable>)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.experimental.max.MaxCore.run(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.FilterFactories.createFilterFactory(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ErrorCollector.checkSucceeds(Callable<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.textui.ResultPrinter.elapsedTimeAsString(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.ComparisonCriteria.arrayEquals(String,Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assert.fail(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runner.Request.method(Class<?>,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.matchers.StacktracePrintingMatcher.describeTo(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.TestMethod.isIgnored(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.TestResult.addError(Test,Throwable)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.experimental.categories.Categories.createSet(Class<?>[]),1,1,0,0,0,0,1,0,0,0,0,0,1,2
org.junit.experimental.theories.internal.Assignments.isComplete(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertTrue(String,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.model.TestClass.getAnnotation(Class<T>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.results.PrintableResult.failureCount(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.formatClassAndValue(Object,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Request.sortWith(Comparator<Description>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Description.getAnnotations(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.addMultipleFailureException(MultipleFailureException),0,0,0,0,0,0,1,0,0,0,0,0,1,0
junit.runner.BaseTestRunner.getPreferences(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"junit.framework.TestCase.assertEquals(String,Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.ParentRunner.isIgnored(T),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.max.MaxCore.run(Request,JUnitCore)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.fireTestSuiteFinished(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.BlockJUnit4ClassRunner.validateMethods(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.Assert.failSame(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestCase.tearDown(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.max.MaxHistory.putTestDuration(Description,long)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.classBlock(RunNotifier),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.RuleChain.apply(Statement,Description)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.testName(Method),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.parameterized.TestWithParameters.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.ComparisonCompactor.compact(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"junit.framework.Assert.assertSame(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.TestCase.assertEquals(double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.fireTestSuiteStarted(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedException.expect(Class<?extendsThrowable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxCore.storedLocally(File),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.extensions.TestDecorator.basicRun(TestResult),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnGenericArrayType(GenericArrayType,List<Throwable>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.ArrayComparisonFailure.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnWildcardType(WildcardType,List<Throwable>)",0,0,0,0,0,0,2,0,0,0,0,0,2,0
org.junit.internal.runners.MethodRoadie.runTestMethod(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.Assert.fail(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestCaseFacade.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedExceptionMatcherBuilder.add(Matcher<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.getTestClass(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.ClassRoadie.runBefores(),0,0,0,0,0,0,0,1,0,0,0,0,1,0
org.junit.experimental.results.PrintableResult.testResult(Request),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assert.assertNull(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.ParameterizedAssertionError.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.Throwables.initGetSuppressed(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkMethod.getDeclaringClass(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.textui.TestRunner.start(String[]),1,2,0,0,1,0,0,0,0,0,0,0,1,3
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.validateConstructor(List<Throwable>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.Assert.assertFalse(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.ComparisonCriteria.isArray(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Description.childlessCopy(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.model.EachTestNotifier.addFailure(Throwable),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runners.parameterized.BlockJUnit4ClassRunnerWithParameters.createTestUsingConstructorInjection(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.TestMethod.getBefores(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.rules.RuleMemberValidator.isRuleType(FrameworkMember<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.getTestMethods(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.results.ResultMatchers.isSuccessful(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.TestWatcher.startingQuietly(Description,List<Throwable>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.ComparisonCriteria.componentTypeName(Class<?>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.JUnitCore.run(Class<?>...),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.ParallelComputer.getRunner(RunnerBuilder,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.testFailure(Failure),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.TextListener.testStarted(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.runners.rules.RuleMemberValidator.validateMember(FrameworkMember<?>,List<Throwable>)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
junit.runner.BaseTestRunner.readPreferences(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.JUnitCommandLineParseResult.parseParameters(String[]),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.experimental.results.FailureList.result(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.Assume.assumeTrue(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.Assignments.assignNext(PotentialAssignment),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.matchers.ThrowableMessageMatcher.describeTo(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.management.ReflectiveThreadMXBean.getThreadCpuTime(long),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.ParameterizedAssertionError.stringValueOf(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertEquals(String,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestCase.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.Result.writeObject(ObjectOutputStream),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.textui.ResultPrinter.printErrors(TestResult),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestAdapter.filter(Filter),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.builders.IgnoredClassRunner.getDescription(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxCore.run(Request),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.AllMembersSupplier.getStaticFieldValue(Field),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertArrayEquals(byte[],byte[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertArrayEquals(String,Object[],Object[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.runner.Description.createTestDescription(String,String,Annotation...)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.internal.AllMembersSupplier.addMultiPointFields(ParameterSignature,List<PotentialAssignment>)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.junit.internal.matchers.ThrowableMessageMatcher.describeMismatchSafely(T,Description)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assert.assertFalse(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.TestWatcher.starting(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestCase.run(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.AssertionFailedError.defaultString(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.ErrorCollector.checkThrows(Class<?extendsThrowable>,ThrowingRunnable)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.Timeout.createFailOnTimeoutStatement(Statement),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertNotNull(String,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runner.JUnitCommandLineParseResult.errorReport(Throwable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.TestSuite.addTestSuite(Class<?extendsTestCase>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.TestCase.assertEquals(String,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(String,float,float,float)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.junit.Assume.assumeTrue(String,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.runner.Result.getAssumptionFailureCount(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.Assert.floatIsDifferent(float,float,float)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"junit.textui.TestRunner.runSingleMethod(String,String,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.runner.BaseTestRunner.showStackRaw(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.matchers.StacktracePrintingMatcher.describeMismatchSafely(T,Description)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.Assert.assertTrue(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.Timeout.millis(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.internal.Assignments.nextUnassigned(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.ComparisonCompactor.computeCommonSuffix(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkField.getAnnotations(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.runner.BaseTestRunner.getPreference(String,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.rules.TemporaryFolder.before(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assert.assertNotNull(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertEquals(double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.theories.Theories.validateConstructor(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.JUnit4ClassRunner.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.textui.ResultPrinter.printHeader(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
junit.framework.JUnit4TestAdapter.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.Assert.assertNotEquals(String,Object,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.junit.internal.runners.TestClass.isShadowed(Method,List<Method>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
"org.junit.experimental.theories.Theories.validateParameterSupplier(Class<?extendsParameterSupplier>,List<Throwable>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.validator.PublicClassValidator.validateTestClass(TestClass),1,0,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.TestSuite.countTestCases(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"junit.framework.Assert.assertNotSame(String,Object,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.internal.runners.MethodValidator.validateNoArgConstructor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.textui.ResultPrinter.print(TestResult,long)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.ClassRoadie.runAfters(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.junit.rules.Timeout.seconds(long),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.ArrayComparisonFailure.addDimension(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.TestClass.getJavaClass(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.experimental.theories.internal.AllMembersSupplier.addArrayValues(ParameterSignature,String,List<PotentialAssignment>,Object)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.junit.experimental.theories.Theories.collectInitializationErrors(List<Throwable>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.matchers.ThrowableCauseMatcher.matchesSafely(T),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.experimental.max.MaxHistory.getTestDuration(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.MethodValidator.validateStaticMethods(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.TestMethod.getTimeout(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.junit.experimental.max.MaxCore.getMalformedTestClass(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.runners.model.FrameworkField.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ExpectedException.failDueToMissingException(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(String,Object,Object)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.junit.experimental.max.MaxHistory.getFailureTimestamp(Description),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(Runnable),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.internal.Classes.getClass(String,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.rules.ErrorCollector.verify(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"junit.framework.Assert.assertEquals(String,int,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.junit.Assume.assumeNotNull(Object...),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.junit.rules.TestWatcher.skippedQuietly(org.junit.internal.AssumptionViolatedException,Description,List<Throwable>)",0,1,0,0,0,0,0,0,0,0,0,0,0,1
junit.framework.ComparisonCompactor.areStringsEqual(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.session.Configuration.newResultSetHandler(Executor,MappedStatement,RowBounds,ParameterHandler,ResultHandler,BoundSql)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.DefaultReflectorFactory.findForClass(Class<?>),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Reader,String,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSessionFromDataSource(ExecutorType,TransactionIsolationLevel,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.Reflector.getSignature(Method),1,1,0,0,1,0,0,0,0,0,0,0,1,2
"org.apache.ibatis.session.Configuration.newExecutor(Transaction,ExecutorType)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(String,SqlSource,StatementType,SqlCommandType,Integer,Integer,String,Class<?>,String,Class<?>,ResultSetType,boolean,boolean,boolean,KeyGenerator,String,String,String,LanguageDriver,String)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.Reflector.addGetMethod(String,Method)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.parsing.XPathParser.evalNode(Object,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMap(Type),2,2,0,0,0,0,0,0,0,0,0,0,0,4
org.apache.ibatis.builder.xml.XMLConfigBuilder.mapperElement(XNode),1,2,0,0,0,0,0,1,0,0,0,0,1,3
"org.apache.ibatis.type.TypeHandlerRegistry.getTypeHandler(Type,JdbcType)",2,2,0,0,0,0,0,0,0,0,0,0,0,4
"org.apache.ibatis.reflection.Reflector.addUniqueMethods(Map<String,Method>,Method[])",0,3,0,0,0,0,1,0,0,0,0,0,1,3
"org.apache.ibatis.builder.SqlSourceBuilder.parse(String,Class<?>,Map<String,Object>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.Reflector.canAccessPrivateMethods(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory.crateProxy(Class<?>,MethodHandler,List<Class<?>>,List<Object>)",0,1,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory.newTransaction(DataSource,TransactionIsolationLevel,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(List<XNode>,String)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(Method),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.parsing.XNode.parseAttributes(Node),1,0,0,0,0,1,0,0,0,0,0,0,1,1
"org.apache.ibatis.jdbc.ScriptRunner.handleLine(StringBuilder,String)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.io.ClassLoaderWrapper.getClassLoaders(ClassLoader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.initNodeHandlerMap(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.TypeParameterResolver.resolveType(Type,Type,Class<?>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.parsing.PropertyParser.parse(String,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getFirstResultSet(Statement),0,2,0,0,0,0,0,0,1,0,0,0,1,2
org.apache.ibatis.parsing.XNode.getBodyData(Node),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.MapperBuilderAssistant.buildResultMapping(Class<?>,String,String,Class<?>,JdbcType,String,String,String,String,Class<?extendsTypeHandler<?>>,List<ResultFlag>,String,String,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.parseDynamicTags(XNode),0,3,0,0,1,0,0,0,0,0,0,0,1,3
org.apache.ibatis.parsing.GenericTokenParser.parse(String),3,4,0,0,0,0,0,0,1,1,0,0,2,7
org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(Object),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.apache.ibatis.executor.loader.cglib.CglibProxyFactory.crateProxy(Class<?>,Callback,List<Class<?>>,List<Object>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.reflection.Reflector.addGetMethods(Class<?>),0,2,0,0,0,0,1,0,0,0,0,0,1,2
org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Configuration),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsElement(Properties),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.Reflector.resolveGetterConflicts(Map<String,List<Method>>)",0,3,0,0,0,0,1,1,0,0,0,0,2,3
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.session.Configuration.newStatementHandler(Executor,MappedStatement,Object,RowBounds,ResultHandler,BoundSql)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.CacheKey.update(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.BaseExecutor.createCacheKey(MappedStatement,Object,RowBounds,BoundSql)",2,2,0,0,0,0,1,0,0,0,0,0,1,4
"org.apache.ibatis.builder.MapperBuilderAssistant.getStatementResultMaps(String,Class<?>,String)",1,0,0,0,0,0,0,1,0,0,0,0,1,1
org.apache.ibatis.reflection.property.PropertyNamer.methodToProperty(String),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.builder.xml.XMLConfigBuilder.parseConfiguration(XNode),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.MapperBuilderAssistant.addResultMap(String,Class<?>,String,Discriminator,List<ResultMapping>,Boolean)",1,4,0,0,0,0,0,1,0,1,0,0,2,5
org.apache.ibatis.reflection.Reflector.addFields(Class<?>),1,5,0,0,0,0,1,0,0,0,0,0,1,6
org.apache.ibatis.reflection.Reflector.typeToClass(Type),2,1,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.builder.MapperBuilderAssistant.applyCurrentNamespace(String,boolean)",2,3,0,0,0,0,0,0,0,0,0,0,0,5
org.apache.ibatis.session.Configuration.checkGloballyForDiscriminatedNestedResultMaps(ResultMap),1,3,0,0,0,0,0,1,0,0,0,0,1,4
"org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XNode,List<ResultMapping>)",0,2,0,0,0,0,1,0,0,0,0,0,1,2
"org.apache.ibatis.parsing.XNode.getStringAttribute(String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createParameterHandler(MappedStatement,Object,BoundSql)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.MapperBuilderAssistant.useNewCache(Class<?extendsCache>,Class<?extendsCache>,Long,Integer,boolean,boolean,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(ResultSetWrapper,ResultMap)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.parsing.XPathParser.createDocument(InputSource),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(MappedStatement,Object,RowBounds,ResultHandler,CacheKey,BoundSql)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(Node,Properties,boolean)",1,2,0,0,0,2,0,0,0,1,0,0,3,3
org.apache.ibatis.reflection.Reflector.isValidPropertyName(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLConfigBuilder.environmentsElement(XNode),1,2,0,0,0,0,0,1,0,0,0,0,1,3
"org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(Configuration,XNode,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.ScriptRunner.lineIsComment(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.parsing.XNode.parseBody(Node),1,1,0,0,0,1,0,0,0,0,0,0,1,2
"org.apache.ibatis.cache.decorators.SoftCache.putObject(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.ScriptRunner.executeLineByLine(Reader),0,0,0,0,0,0,0,0,0,1,0,0,1,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createAutomaticMappings(ResultSetWrapper,ResultMap,MetaObject,String)",1,5,0,0,0,0,0,1,0,0,0,0,1,6
org.apache.ibatis.logging.LogFactory.getLog(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.scripting.xmltags.XMLScriptBuilder.parseScriptNode(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.parsing.XNode.getStringAttribute(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeAliasRegistry.registerAlias(String,Class<?>)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.TypeParameterResolver.resolveWildcardType(WildcardType,Type,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.parsing.XNode.getValueBasedIdentifier(),0,2,0,0,0,0,0,0,1,0,0,0,1,2
org.apache.ibatis.reflection.Reflector.getClassMethods(Class<?>),0,0,0,0,0,0,0,1,1,0,0,0,2,0
"org.apache.ibatis.scripting.defaults.RawSqlSource.getSql(Configuration,SqlNode)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.TypeParameterResolver.resolveParameterizedType(ParameterizedType,Type,Class<?>)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XNode),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.reflection.Reflector.addSetMethods(Class<?>),0,2,0,0,0,0,1,0,0,0,0,0,1,2
org.apache.ibatis.binding.MapperProxyFactory.newInstance(SqlSession),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.factory.DefaultObjectFactory.instantiateClass(Class<T>,List<Class<?>>,List<Object>)",0,3,0,0,0,0,0,2,0,0,0,0,2,3
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(Method),1,6,0,0,0,0,0,1,0,0,0,0,1,7
"org.apache.ibatis.executor.BaseExecutor.query(MappedStatement,Object,RowBounds,ResultHandler,CacheKey,BoundSql)",3,2,0,0,0,0,0,1,0,0,0,0,1,5
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(ResultSetWrapper,ResultMap,List<Object>,ResultMapping)",0,2,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.parsing.XPathParser.evalNodes(Object,String)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getReturnType(Method),1,8,0,0,0,0,0,0,0,0,0,0,0,9
org.apache.ibatis.scripting.xmltags.TextSqlNode.isDynamic(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(Statement),1,1,0,0,0,0,0,0,1,1,0,0,2,2
org.apache.ibatis.parsing.XNode.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(String,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.MappedStatement.getBoundSql(Object),1,2,0,0,0,0,1,0,0,0,0,0,1,3
org.apache.ibatis.jdbc.ScriptRunner.executeStatement(String),2,2,0,0,0,0,0,0,0,0,0,0,0,4
org.apache.ibatis.datasource.unpooled.UnpooledDataSource.initializeDriver(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.builder.xml.XMLConfigBuilder.settingsAsProperties(XNode),1,1,0,0,0,0,1,0,0,0,0,0,1,2
org.apache.ibatis.parsing.XNode.getParent(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(ResultSetWrapper,ResultMap,ResultHandler<?>,RowBounds,ResultMapping)",0,0,0,0,0,0,0,0,1,0,0,0,1,0
"org.apache.ibatis.binding.MapperMethod.execute(SqlSession,Object[])",1,0,1,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(),1,1,0,0,0,0,0,1,0,0,0,0,1,2
org.apache.ibatis.parsing.XNode.getChildren(),1,1,0,0,0,1,0,0,0,0,0,0,1,2
"org.apache.ibatis.builder.xml.XMLMapperBuilder.buildResultMappingFromContext(XNode,Class<?>,List<ResultFlag>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(Method,Class<?>,LanguageDriver)",0,2,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.reflection.factory.DefaultObjectFactory.resolveInterface(Class<?>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.reflection.Reflector.resolveSetterConflicts(Map<String,List<Method>>)",0,3,0,0,0,0,1,1,0,0,0,0,2,3
org.apache.ibatis.reflection.wrapper.BeanWrapper.hasSetter(String),1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.reflection.Reflector.addMethodConflict(Map<String,List<Method>>,String,Method)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.session.Configuration.newMetaObject(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.isLazyLoadingEnabled(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.Reflector.addGetField(Field),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.parsing.XPathParser.commonConstructor(boolean,Properties,EntityResolver)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.MetaClass.hasSetter(String),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory.setProperties(Properties),1,1,0,0,0,0,1,0,0,0,0,0,1,2
"org.apache.ibatis.builder.xml.XMLMapperEntityResolver.resolveEntity(String,String)",0,2,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.reflection.Reflector.addDefaultConstructor(Class<?>),0,3,0,0,0,0,1,0,0,0,0,0,1,3
org.apache.ibatis.builder.StaticSqlSource.getBoundSql(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.Reflector.addSetField(Field),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.mapping.ResultMapping.getFlags(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.xml.XMLMapperEntityResolver.getInputSource(String,String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(String),0,2,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.MetaObject.forObject(Object,ObjectFactory,ObjectWrapperFactory,ReflectorFactory)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.executor.SimpleExecutor.doQuery(MappedStatement,Object,RowBounds,ResultHandler,BoundSql)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.MapperBuilderAssistant.parseCompositeColumnName(String),1,0,0,0,0,0,0,0,0,1,0,0,1,1
"org.apache.ibatis.reflection.TypeParameterResolver.resolveParamTypes(Method,Type)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.shouldProcessMoreRows(ResultContext<?>,RowBounds)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseCache(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(ResultSetWrapper,ResultMap,List<Class<?>>,List<Object>,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.session.Configuration.checkLocallyForDiscriminatedNestedResultMaps(ResultMap),1,2,0,0,0,0,0,1,0,0,0,0,1,3
org.apache.ibatis.scripting.xmltags.DynamicContext.appendSql(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.parsing.XNode.getNode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.wrapper.MapWrapper.hasGetter(String),1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.parsing.XNode.getIntAttribute(String,Integer)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(ResultSetWrapper,ResultMap,MetaObject,ResultLoaderMap,String)",0,5,0,0,0,0,1,0,0,0,0,0,1,5
"org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(PropertyTokenizer,Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.SimpleExecutor.prepareStatement(StatementHandler,Log)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.TypeParameterResolver.resolveGenericArrayType(GenericArrayType,Type,Class<?>)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.jdbc.ScriptRunner.commandReadyToExecute(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.ResultSetWrapper.loadMappedAndUnmappedColumnNames(ResultMap,String)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.apache.ibatis.mapping.BoundSql.hasAdditionalParameter(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLMapperBuilder.parameterMapElement(List<XNode>),0,0,0,0,0,0,1,1,0,0,0,0,2,0
org.apache.ibatis.cache.decorators.LruCache.setSize(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.scripting.LanguageDriverRegistry.register(Class<?>),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.type.TypeHandlerRegistry.register(Type,TypeHandler<?extendsT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.ResultMap.hasNestedResultMaps(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.decorators.TransactionalCache.flushPendingEntries(),0,1,0,0,0,0,2,0,0,0,0,0,2,1
"org.apache.ibatis.parsing.XNode.getBooleanAttribute(String,Boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.xml.XMLStatementBuilder.parseSelectKeyNode(String,XNode,Class<?>,LanguageDriver,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.TypeParameterResolver.resolveReturnType(Method,Type)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.addLoadedResource(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.MapperBuilderAssistant.buildDiscriminator(Class<?>,String,Class<?>,JdbcType,Class<?extendsTypeHandler<?>>,Map<String,String>)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(List<XNode>),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.apache.ibatis.session.Configuration.isResourceLoaded(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeHandlerRegistry.register(JdbcType,TypeHandler<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.ResultSetWrapper.getMapKey(ResultMap,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.logging.LogFactory.tryImplementation(Runnable),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.ParameterExpression.skipWS(String,int)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.apache.ibatis.cache.decorators.WeakCache.putObject(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.ResultMap.getDiscriminator(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory.convertValue(MetaObject,String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(Configuration,String,Class<?>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.MetaObject.setValue(String,Object)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.builder.xml.XMLMapperBuilder.sqlElement(List<XNode>,String)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.apache.ibatis.scripting.xmltags.TextSqlNode.createParser(TokenHandler),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.loader.ResultLoaderMap.addLoader(String,MetaObject,ResultLoader)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.plugin.Plugin.getAllInterfaces(Class<?>,Map<Class<?>,Set<Method>>)",0,1,0,0,0,0,0,1,1,0,0,0,2,1
org.apache.ibatis.reflection.property.PropertyTokenizer.getName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.statement.BaseStatementHandler.setStatementTimeout(Statement,Integer)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.Reflector.addSetMethod(String,Method)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.reflection.ParamNameResolver.getActualParamName(Method,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.MapperBuilderAssistant.resolveResultJavaType(Class<?>,String,Class<?>)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.builder.ParameterExpression.property(String,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseResultMap(Method),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.SqlBuilder.RESET(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.CachingExecutor.query(MappedStatement,Object,RowBounds,ResultHandler)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeHandlerRegistry.hasTypeHandler(Class<?>,JdbcType)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.ArrayUtil.hashCode(Object),3,0,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.builder.BaseBuilder.resolveClass(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.cache.decorators.SerializedCache.deserialize(byte[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.parsing.XPathParser.evaluate(String,Object,QName)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLMapperBuilder.bindMapperForNamespace(),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.session.Configuration.getTypeHandlerRegistry(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getParameterType(Method),0,2,0,0,0,0,1,0,0,0,0,0,1,2
org.apache.ibatis.cache.TransactionalCacheManager.commit(),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.apache.ibatis.builder.xml.XMLMapperBuilder.processNestedResultMappings(XNode,List<ResultMapping>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.parsing.XNode.newXNode(Node),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.transaction.jdbc.JdbcTransaction.close(),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNestedQueryMappingValue(ResultSet,MetaObject,ResultMapping,ResultLoaderMap,String)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.scripting.xmltags.TextSqlNode.apply(DynamicContext),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.io.ClassLoaderWrapper.classForName(String,ClassLoader[])",0,2,0,0,0,0,1,0,0,0,0,0,1,2
"org.apache.ibatis.io.Resources.getResourceAsStream(ClassLoader,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(DynamicContext),0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.apache.ibatis.reflection.TypeParameterResolver.resolveTypeVar(TypeVariable<?>,Type,Class<?>)",3,2,0,0,0,0,1,0,0,0,0,0,1,5
org.apache.ibatis.session.Configuration.getSqlFragments(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory.createProxy(Object,ResultLoaderMap,Configuration,ObjectFactory,List<Class<?>>,List<Object>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.CacheBuilder.setStandardDecorators(Cache),0,4,0,0,0,0,0,0,0,0,0,0,0,4
"org.apache.ibatis.builder.MapperBuilderAssistant.buildParameterMapping(Class<?>,String,Class<?>,JdbcType,String,ParameterMode,Class<?extendsTypeHandler<?>>,Integer)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.parsing.XNode.getChildrenAsProperties(),0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getLanguageDriver(Method),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.session.Configuration.addResultMap(ResultMap),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.impl.PerpetualCache.getObject(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(PreparedStatement),1,3,0,0,0,1,0,0,0,0,0,0,1,4
"org.apache.ibatis.builder.ParameterExpression.skipUntil(String,int,String)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"org.apache.ibatis.builder.xml.XMLIncludeTransformer.getStringAttribute(Node,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.ScriptRunner.runScript(Reader),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.binding.MapperProxyFactory.newInstance(MapperProxy<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.ScriptRunner.commitConnection(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.executor.BaseExecutor.getConnection(Log),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.type.TypeHandlerRegistry.register(Type,JdbcType,TypeHandler<?>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.reflection.TypeParameterResolver.resolveFieldType(Field,Type)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.scripting.LanguageDriverRegistry.setDefaultDriverClass(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResultMap(String,Class<?>,Arg[],Result[],TypeDiscriminator)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.shouldApplyAutomaticMappings(ResultMap,boolean)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.session.defaults.DefaultSqlSession.close(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(Connection),1,1,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.builder.MapperBuilderAssistant.parseMultipleColumnNames(String),1,1,0,0,0,0,0,0,0,1,0,0,1,2
org.apache.ibatis.cache.decorators.SoftCache.getObject(Object),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.mapping.VendorDatabaseIdProvider.getDatabaseProductName(DataSource),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlCommandType(Method),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.executor.resultset.ResultSetWrapper.getColumnNames(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.factory.DefaultObjectFactory.create(Class<T>,List<Class<?>>,List<Object>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.generateResultMapName(Method),2,0,0,0,0,0,1,0,0,0,0,0,1,2
org.apache.ibatis.logging.LogFactory.useSlf4jLogging(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.scripting.xmltags.ForEachSqlNode.itemizeItem(String,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.plugin.InterceptorChain.pluginAll(Object),0,0,0,0,0,0,1,0,0,0,0,0,1,0
org.apache.ibatis.session.Configuration.hasStatement(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.Reflector.getGetInvoker(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.reflection.MetaObject.getSetterType(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.loader.ResultLoader.loadResult(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.cache.impl.PerpetualCache.putObject(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.prependPrefix(String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.mapping.ResultMap.getAutoMapping(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.xml.XMLIncludeTransformer.getVariablesContext(Node,Properties)",1,3,0,0,1,0,0,0,0,0,0,0,1,4
"org.apache.ibatis.reflection.MetaObject.findProperty(String,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parsePendingMethods(),0,0,0,0,0,0,0,0,0,1,0,0,1,0
org.apache.ibatis.scripting.defaults.RawSqlSource.getBoundSql(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.xml.XMLIncludeTransformer.findSqlFragment(String,Properties)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.statement.PreparedStatementHandler.update(Statement),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.decorators.SoftCache.removeGarbageCollectedItems(),0,0,0,0,0,0,0,0,1,0,0,0,1,0
org.apache.ibatis.reflection.MetaClass.getSetterType(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.type.StringTypeHandler.getNullableResult(ResultSet,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.jdbc.ScriptRunner.setLogWriter(PrintWriter),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.binding.MapperMethod.rowCountResult(int),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.type.BaseTypeHandler.getResult(ResultSet,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.scripting.LanguageDriverRegistry.getDefaultDriver(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.TransactionalCacheManager.getTransactionalCache(Cache),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.logging.LogFactory.getLog(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.putAncestor(Object,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.skipRows(ResultSet,RowBounds)",1,1,0,0,0,1,0,0,0,0,0,0,1,2
org.apache.ibatis.cache.decorators.WeakCache.removeGarbageCollectedItems(),0,0,0,0,0,0,0,0,1,0,0,0,1,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.validateResultMapsCount(ResultSetWrapper,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.jdbc.ScriptRunner.setAutoCommit(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.reflection.wrapper.BeanWrapper.findProperty(String,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.resultset.ResultSetWrapper.getUnmappedColumnNames(ResultMap,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.scripting.LanguageDriverRegistry.getDriver(Class<?>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.setReturnInstanceForEmptyRow(boolean),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.ErrorContext.reset(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.hasNestedSelect(Result),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.binding.MapperRegistry.getMapper(Class<T>,SqlSession)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.BaseBuilder.resolveTypeHandler(Class<?>,Class<?extendsTypeHandler<?>>)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.session.Configuration.isCallSettersOnNulls(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.logging.slf4j.Slf4jImpl.isDebugEnabled(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.cache.decorators.TransactionalCache.putObject(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.BaseBuilder.resolveAlias(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.reflection.wrapper.BeanWrapper.set(PropertyTokenizer,Object)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.cache.CacheKey.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.applyResults(Result[],Class<?>,List<ResultMapping>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
org.apache.ibatis.session.defaults.DefaultSqlSession.getConnection(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.loader.AbstractEnhancedDeserializationProxy.invoke(Object,Method,Object[])",0,5,0,0,0,0,0,0,0,0,0,0,0,5
org.apache.ibatis.session.Configuration.getTypeAliasRegistry(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLIncludeTransformer.applyIncludes(Node),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.cache.decorators.WeakCache.getObject(Object),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.builder.xml.XMLConfigBuilder.transactionManagerElement(XNode),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(boolean),0,2,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.executor.BaseExecutor.close(boolean),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.jdbc.ScriptRunner.rollbackConnection(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.executor.CachingExecutor.getTransaction(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.io.DefaultVFS.list(URL,String)",0,14,0,0,0,2,0,1,0,0,0,0,3,14
"org.apache.ibatis.type.UnknownTypeHandler.resolveTypeHandler(ResultSet,String)",0,2,0,0,0,1,0,0,0,0,0,0,1,2
org.apache.ibatis.session.Configuration.getDefaultScriptingLanguageInstance(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.ResultMapping.getProperty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.cache.impl.PerpetualCache.removeObject(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.wrapper.DefaultObjectWrapperFactory.hasWrapperFor(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.scripting.xmltags.DynamicContext.getSql(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.MapperBuilderAssistant.setCurrentNamespace(String),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.apache.ibatis.mapping.MappedStatement.getStatementLog(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(String,Object,RowBounds)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.chooseAnnotationType(Method,Set<Class<?extendsAnnotation>>)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
"org.apache.ibatis.builder.MapperBuilderAssistant.resolveParameterJavaType(Class<?>,String,Class<?>,JdbcType)",2,1,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.builder.xml.XMLStatementBuilder.databaseIdMatchesCurrent(String,String,String)",1,4,0,0,0,0,0,0,0,0,0,0,0,5
org.apache.ibatis.session.Configuration.getLanguageRegistry(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.xml.XMLConfigBuilder.typeAliasesElement(XNode),1,2,0,0,0,0,0,1,0,0,0,0,1,3
org.apache.ibatis.io.Resources.getResourceAsReader(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.binding.MapperProxy.invoke(Object,Method,Object[])",0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.datasource.unpooled.UnpooledDataSource.configureConnection(Connection),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.apache.ibatis.cache.decorators.LruCache.putObject(Object,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.ParameterExpression.parse(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.binding.MapperMethod.executeForMany(SqlSession,Object[])",2,1,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.mapping.MappedStatement.delimitedStringToArray(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(String[],Class<?>,LanguageDriver)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getDiscriminatorValue(ResultSet,Discriminator,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.builder.BaseBuilder.resolveResultSetType(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.builder.MapperBuilderAssistant.getLanguageDriver(Class<?>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.apache.ibatis.type.TypeHandlerRegistry.register(Class<?>,Class<?>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeHandlerRegistry.getJdbcHandlerMapForEnumInterfaces(Class<?>,Class<?>)",0,2,0,0,0,0,1,1,0,0,0,0,2,2
"org.apache.ibatis.reflection.MetaClass.buildProperty(String,StringBuilder)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(ResultSetWrapper,ResultMap,ResultLoaderMap,String)",1,1,0,0,0,0,0,1,0,0,0,0,1,2
"org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(String,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeHandlerRegistry.register(Class<T>,JdbcType,TypeHandler<?extendsT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.executor.loader.ResultLoaderMap.size(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.jdbc.ScriptRunner.printResults(Statement,boolean)",0,2,0,0,0,2,0,0,0,1,0,0,3,2
org.apache.ibatis.logging.LogFactory.setImplementation(Class<?extendsLog>),0,1,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.session.Configuration.addMapper(Class<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.mapping.ResultMapping.getResultSet(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.SqlSessionFactoryBuilder.build(Reader),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.io.Resources.getResourceAsStream(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.type.TypeHandlerRegistry.register(Class<T>,TypeHandler<?extendsT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.getResultMap(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.ResultExtractor.extractObjectFromList(List<Object>,Class<?>)",1,2,0,0,0,1,0,0,0,0,0,0,1,3
org.apache.ibatis.reflection.MetaClass.hasDefaultConstructor(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.reflection.wrapper.MapWrapper.getSetterType(String),1,2,0,0,0,0,0,0,0,0,0,0,0,3
org.apache.ibatis.cache.decorators.LruCache.getId(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.addInterceptor(Interceptor),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.executor.statement.PreparedStatementHandler.query(Statement,ResultHandler)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.apache.ibatis.session.Configuration.buildAllStatements(),4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.apache.ibatis.executor.resultset.DefaultResultSetHandler.hasTypeHandlerForResultObject(ResultSetWrapper,Class<?>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.apache.ibatis.executor.ErrorContext.resource(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.apache.ibatis.builder.xml.XMLStatementBuilder.processSelectKeyNodes(String,Class<?>,LanguageDriver)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.maxent.GISModel.eval(int[],double[],EvalParameters)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.ml.perceptron.PerceptronTrainer.findParameters(int,boolean)",2,8,0,0,3,8,0,0,0,0,0,0,11,10
opennlp.tools.ngram.NGramModel.add(StringList),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.model.TwoPassDataIndexer.index(int,ObjectStream<Event>,Map<String,Integer>)",0,3,0,0,0,1,0,1,1,0,0,0,3,3
"opennlp.tools.ml.model.TwoPassDataIndexer.computeEventCounts(ObjectStream<Event>,Writer,Map<String,Integer>,int)",0,0,0,0,1,0,0,0,1,0,0,0,2,0
"opennlp.tools.ml.maxent.GISTrainer.nextIteration(double,CompletionService<ModelExpactationComputeTask>)",0,3,0,0,4,3,0,1,0,0,0,0,8,3
"opennlp.tools.util.Span.spansToStrings(Span[],CharSequence)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.ml.maxent.GISModel.eval(int[],float[],double[],EvalParameters)",0,3,0,0,3,1,0,0,0,0,0,0,4,3
opennlp.tools.ml.model.Event.toString(),1,2,0,0,1,0,0,0,0,0,0,0,1,3
"opennlp.tools.ml.maxent.GISTrainer.trainModel(int,DataIndexer,Prior,int,int)",2,8,0,0,5,5,0,1,0,0,0,0,11,10
opennlp.tools.ml.model.FileEventStream.read(),1,0,0,0,0,1,0,0,0,0,0,0,1,1
opennlp.tools.ml.model.FileEventStream.toLine(Event),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.ml.model.AbstractDataIndexer.update(String[],Set<String>,Map<String,Integer>,int)",0,2,0,0,0,0,1,0,0,0,0,0,1,2
"opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(List<ComparableEvent>,boolean)",3,2,0,0,1,1,0,0,0,0,0,0,2,5
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(EvalParameters),0,2,0,0,1,1,0,0,0,0,0,0,2,2
"opennlp.tools.ngram.NGramModel.setCount(StringList,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(Map<String,Integer>)",0,0,0,0,0,0,1,0,0,0,0,0,1,0
opennlp.tools.ml.model.ComparableEvent.compareTo(ComparableEvent),2,5,0,0,1,0,0,0,0,0,0,0,1,7
opennlp.tools.tokenize.WhitespaceTokenizer.tokenizePos(String),1,3,0,0,1,0,0,0,0,0,0,0,1,4
"opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int,Object[],String[])",7,11,0,0,0,2,0,0,0,0,0,0,2,18
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]),1,0,0,0,1,5,0,0,0,0,0,0,6,1
"opennlp.tools.ml.perceptron.PerceptronModel.eval(int[],float[],double[],EvalParameters,boolean)",1,3,0,0,1,4,0,0,0,0,0,0,5,4
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(Function),4,7,0,0,1,2,0,0,0,0,0,0,3,11
"opennlp.tools.ml.BeamSearch.bestSequences(int,T[],Object[],double,BeamSearchContextGenerator<T>,SequenceValidator<T>)",1,8,0,0,2,3,0,0,0,0,0,0,5,9
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]),1,0,0,0,1,2,0,0,0,0,0,0,3,1
opennlp.tools.ml.model.HashSumEventStream.read(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.model.UniformPrior.logPrior(double[],int[],float[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computeDirection(double[]),0,0,0,0,3,2,0,0,0,0,0,0,5,0
"opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computePseudoGrad(double[],double[],double[])",0,2,0,0,1,0,0,0,0,0,0,0,1,2
"opennlp.tools.ml.naivebayes.NaiveBayesModel.eval(int[],float[],double[],EvalParameters,boolean)",0,2,0,0,4,1,0,0,0,0,0,0,5,2
opennlp.tools.util.AbstractObjectStream.read(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.ngram.NGramModel.add(StringList,int,int)",2,0,0,0,1,2,0,0,0,0,0,0,3,2
opennlp.tools.ml.naivebayes.LogProbabilities.normalize(),1,4,0,0,0,0,3,0,0,0,0,0,3,5
"opennlp.tools.namefind.NameFinderEventStream.generateEvents(String[],String[],NameContextGenerator)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters(),0,1,0,0,3,3,0,0,0,0,0,0,6,1
opennlp.tools.parser.PosSampleStream.read(),1,0,0,0,0,1,0,0,0,0,0,0,1,1
opennlp.tools.ml.perceptron.PerceptronTrainer.trainingStats(EvalParameters),0,2,0,0,1,1,0,0,0,0,0,0,2,2
opennlp.tools.ml.maxent.quasinewton.ArrayMath.logSumOfExps(double[]),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"opennlp.tools.tokenize.TokenSample.parse(String,String)",2,1,0,0,0,0,1,0,0,1,0,0,2,3
"opennlp.tools.ml.maxent.GISModel.eval(String[],float[],double[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.postag.POSSample.getSentence(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.maxent.quasinewton.ArrayMath.maxIdx(double[]),1,1,0,0,1,0,0,0,0,0,0,0,1,2
"opennlp.tools.ml.maxent.quasinewton.LineSearch.doConstrainedLineSearch(Function,double[],LineSearchResult,double,double)",0,2,0,0,1,3,0,0,1,0,0,0,5,2
"opennlp.tools.ml.maxent.quasinewton.ArrayMath.innerProduct(double[],double[])",1,0,0,0,1,0,0,0,0,0,0,0,1,1
"opennlp.tools.formats.ad.ADNameSampleStream.processLeaf(Leaf,List<String>,List<Span>)",6,6,0,0,0,0,0,0,0,0,0,0,0,12
"opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int,DataIndexer)",1,0,0,0,1,1,0,0,0,0,0,0,2,1
opennlp.tools.util.featuregen.FastTokenClassFeatureGenerator.tokenFeature(String),1,1,0,0,0,0,0,0,0,0,0,0,0,2
opennlp.tools.util.StringList.toString(),0,1,0,0,1,0,0,0,0,0,0,0,1,1
"opennlp.tools.parser.chunking.BuildContextGenerator.getContext(Parse[],int)",16,19,0,0,0,6,0,0,0,0,0,0,6,35
opennlp.tools.util.StringUtil.isWhitespace(char),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.AbstractBottomUpParser.buildDictionary(ObjectStream<Parse>,HeadRules,TrainingParameters)",1,9,0,0,0,2,0,0,1,2,0,0,5,10
opennlp.tools.dictionary.Dictionary.put(StringList),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.tokenize.DefaultTokenContextGenerator.getContext(String,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.tokenize.DefaultTokenContextGenerator.addCharPreds(String,char,List<String>)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
"opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(List<String>,String[],int,String[])",0,2,0,0,2,0,0,2,0,0,0,0,4,2
opennlp.tools.ml.naivebayes.NaiveBayesModel.eval(String[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.util.AbstractEventStream.read(),1,1,0,0,0,0,0,0,0,1,0,0,1,2
opennlp.tools.parser.Parse.getType(String),1,3,0,0,0,0,0,0,0,0,0,0,0,4
opennlp.tools.ml.maxent.quasinewton.ArrayMath.l1norm(double[]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.parser.Parse.getTagNodes(),0,1,0,0,0,0,0,0,1,0,0,0,1,1
opennlp.tools.tokenize.TokSpanEventStream.createEvents(TokenSample),1,6,0,0,0,3,0,1,0,0,0,0,4,7
opennlp.tools.ml.perceptron.PerceptronTrainer.maxIndex(double[]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(List<String>,String[],int,String[])",2,0,0,0,0,0,0,0,0,0,0,0,0,2
opennlp.tools.ml.model.Event.getContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.util.featuregen.AggregatedFeatureGenerator.updateAdaptiveData(String[],String[])",0,0,0,0,0,0,1,0,0,0,0,0,1,0
opennlp.tools.parser.Parse.insert(Parse),1,1,0,0,0,1,0,0,0,0,0,0,1,2
"opennlp.tools.tokenize.TokenizerME.train(ObjectStream<TokenSample>,TokenizerFactory,TrainingParameters)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.ml.TrainerFactory.getEventTrainer(Map<String,String>,Map<String,String>)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"opennlp.tools.ml.model.MutableContext.setParameter(int,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.doccat.DocumentSample.getText(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.ml.perceptron.PerceptronModel.eval(String[],float[],double[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.ml.model.AbstractModel.init(String[],String[])",0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.util.Span.getStart(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.tokenize.DefaultTokenContextGenerator.createContext(String,int)",4,1,0,0,0,0,0,0,0,0,0,0,0,5
opennlp.tools.parser.ChunkSampleStream.read(),1,2,0,0,0,2,0,0,0,0,0,0,2,3
opennlp.tools.ml.model.HashSumEventStream.calculateHashSum(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.maxent.io.BinaryGISModelWriter.writeDouble(double),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.ChunkContextGenerator.getContext(int,String[],String[],String[])",6,2,0,0,0,0,0,0,0,0,0,0,0,8
opennlp.tools.ml.maxent.io.BinaryGISModelWriter.writeUTF(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.model.ComparablePredicate.compareTo(ComparablePredicate),1,1,0,0,1,0,0,0,0,0,0,0,1,2
"opennlp.tools.chunker.DefaultChunkerSequenceValidator.validOutcome(String,String)",1,3,0,0,0,0,0,0,0,0,0,0,0,4
"opennlp.tools.postag.POSTaggerME.train(String,ObjectStream<POSSample>,TrainingParameters,POSTaggerFactory)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
opennlp.tools.ml.perceptron.PerceptronTrainer.displayIteration(int),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int,String[],String[],String)",1,4,0,0,0,0,0,0,0,0,0,0,0,5
"opennlp.tools.ml.maxent.quasinewton.QNModel.eval(int[],float[],double[],int,int,double[])",0,0,0,0,2,1,0,0,0,0,0,0,3,0
"opennlp.tools.parser.lang.en.HeadRules.getHead(Parse[],String)",2,7,0,0,0,11,0,0,0,0,0,0,11,9
opennlp.tools.ml.model.AbstractModelReader.getParameters(int[][]),0,0,0,0,1,2,0,0,0,0,0,0,3,0
opennlp.tools.ml.model.EvalParameters.getNumOutcomes(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.maxent.io.GISModelWriter.persist(),0,0,0,0,4,0,0,0,0,0,0,0,4,0
"opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(List<String>,String[],int,String[])",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.ml.maxent.quasinewton.ArrayMath.l2norm(double[]),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.AbstractContextGenerator.cons2(List<String>,Cons,Cons,Collection<Parse>,boolean)",1,10,0,0,0,1,0,0,0,0,0,0,1,11
opennlp.tools.ml.maxent.GISTrainer.display(String),1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.namefind.TokenNameFinderFactory.createFeatureGenerators(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(ObjectStream<Event>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.maxent.GISModel.eval(String[],double[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.formats.ad.ADNameSampleStream.read(),0,1,0,0,0,0,0,0,1,0,0,0,1,1
"opennlp.tools.ml.maxent.GIS.trainModel(int,DataIndexer,boolean,boolean,Prior,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.tokenize.TokenSample.addToken(StringBuilder,List<Span>,String,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.parser.Parse.getChildren(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.Parse.parseParse(String,GapLabeler)",0,7,0,0,2,0,0,0,0,0,0,0,2,7
"opennlp.tools.ml.naivebayes.NaiveBayesModel.initOutcomeTotals(String[],Context[])",0,0,0,0,1,1,0,0,0,0,0,0,2,0
opennlp.tools.util.StringUtil.toLowerCase(CharSequence),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.parser.AbstractContextGenerator.cons3(List<String>,Cons,Cons,Cons,Collection<Parse>,Collection<Parse>,boolean,boolean,boolean)",2,40,0,0,0,6,0,0,0,0,0,0,6,42
opennlp.tools.ml.perceptron.PerceptronModelWriter.sortValues(),0,2,0,0,1,2,0,0,0,0,0,0,3,2
"opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int,String[],String[],Object[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.namefind.BioCodec.encode(Span[],int)",0,2,0,0,1,1,1,0,0,0,0,0,3,2
opennlp.tools.parser.Parse.addPreviousPunctuation(Parse),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(Element,FeatureGeneratorResourceProvider)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.parser.ChunkContextGenerator.chunkandpostagbo(int,String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.ml.model.AbstractModelReader.getOutcomePatterns(),0,0,0,0,1,1,0,0,0,0,0,0,2,0
opennlp.tools.formats.ad.ADChunkSampleStream.isIncludePunctuations(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ngram.NGramModel.getCount(StringList),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.model.MutableContext.updateParameter(int,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read(),2,1,0,0,0,0,0,0,0,0,0,0,0,3
opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(StringList),0,1,0,0,0,2,1,0,0,0,0,0,3,1
opennlp.tools.ml.model.Context.getOutcomes(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.namefind.NameSample.getSentence(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.util.Version.parse(String),2,0,0,0,0,0,0,0,0,0,0,0,0,2
opennlp.tools.sentdetect.SDEventStream.createEvents(SentenceSample),0,1,0,0,0,1,1,0,0,0,0,0,2,1
opennlp.tools.namefind.NameSampleDataStream.read(),1,0,0,0,0,0,0,0,1,0,0,0,1,1
opennlp.tools.ml.model.EvalParameters.getConstantInverse(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.parser.treeinsert.ParserEventStream.getNonAdjoinedParent(Parse),0,0,0,1,0,0,0,0,1,0,0,0,1,1
opennlp.tools.namefind.NameFinderME.setProbs(Span[]),1,0,0,0,0,1,0,0,0,0,0,0,1,1
"opennlp.tools.ml.maxent.quasinewton.QNModel.eval(String[],double[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ngram.NGramUtils.getNMinusOneTokenFirst(StringList),0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(String),0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.ml.model.Event.getOutcome(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.util.StringList.hashCode(),0,1,0,0,1,0,0,0,0,0,0,0,1,1
opennlp.tools.formats.ad.ADSentenceSampleStream.read(),2,3,0,0,0,0,0,0,0,0,1,1,2,5
"opennlp.tools.postag.POSSampleEventStream.generateEvents(String[],String[],Object[],POSContextGenerator)",0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(StringList),1,2,0,0,0,0,0,1,0,0,0,0,1,3
"opennlp.tools.parser.AbstractBottomUpParser.lastChild(Parse,Parse,Set<String>)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.ml.maxent.quasinewton.QNMinimizer.isConverged(LineSearchResult),4,4,0,0,0,0,0,0,0,0,0,0,0,8
opennlp.tools.util.featuregen.StringPattern.digits(),0,0,0,1,0,0,0,0,0,0,0,0,0,1
opennlp.tools.ml.model.AbstractModel.getOutcome(int),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.treeinsert.AttachContextGenerator.getContext(Parse[],int,List<Parse>,int)",5,1,0,0,0,1,0,0,0,0,0,0,1,6
opennlp.tools.ml.maxent.quasinewton.QNModel.getPredIndex(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.util.Version.toString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.util.Span.getEnd(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.maxent.io.GISModelWriter.compressOutcomes(ComparablePredicate[]),1,1,0,0,0,1,0,0,0,0,0,0,1,2
opennlp.tools.ml.maxent.quasinewton.ArrayMath.toDoubleArray(List<Double>),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(CharSequence,int)",1,4,0,0,0,2,0,0,0,2,0,0,4,5
opennlp.tools.util.StringList.size(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.Parse.adjoin(Parse,HeadRules)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.lemmatizer.LemmaSample.getTags(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.maxent.io.GISModelWriter.sortValues(),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.parser.treeinsert.ParserEventStream.addParseEvents(List<Event>,Parse[])",0,33,0,1,2,3,0,0,0,1,0,0,6,34
opennlp.tools.ml.maxent.quasinewton.ArrayMath.toIntArray(List<Integer>),0,0,0,0,1,0,0,0,0,0,0,0,1,0
"opennlp.tools.parser.chunking.CheckContextGenerator.getContext(Parse[],String,int,int)",4,1,0,0,1,1,0,0,0,0,0,0,2,5
opennlp.tools.parser.lang.en.HeadRules.readHeadRules(BufferedReader),0,0,0,0,0,0,0,0,1,1,0,0,2,0
"opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(String[],Class<T>...)",2,3,0,0,0,0,1,1,0,0,0,0,2,5
"opennlp.tools.ml.naivebayes.LogProbabilities.addIn(T,double,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.ml.model.EvalParameters.getParams(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(List<String>,String[],int,String[])",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"opennlp.tools.parser.AbstractBottomUpParser.collapsePunctuation(Parse[],Set<String>)",1,4,0,0,1,1,0,0,0,0,0,0,2,5
"opennlp.tools.parser.treeinsert.BuildContextGenerator.getContext(Parse[],int)",6,0,0,0,0,0,0,0,0,0,0,0,0,6
"opennlp.tools.parser.chunking.ParserEventStream.addParseEvents(List<Event>,Parse[])",0,6,0,1,0,0,0,0,1,2,0,0,3,7
opennlp.tools.util.Span.getType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.formats.Conll02NameSampleStream.read(),2,10,0,0,0,1,0,0,1,0,0,0,2,12
opennlp.tools.chunker.ChunkerEventStream.createEvents(ChunkSample),1,0,0,0,0,1,0,0,0,0,0,0,1,1
opennlp.tools.ngram.NGramModel.contains(StringList),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.util.featuregen.AggregatedFeatureGenerator.createFeatures(List<String>,String[],int,String[])",0,0,0,0,0,0,1,0,0,0,0,0,1,0
"opennlp.tools.chunker.DefaultChunkerContextGenerator.getContext(int,String[],String[],String[])",4,0,0,0,0,0,0,0,0,0,0,0,0,4
opennlp.tools.util.StringList.equals(Object),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ngram.NGramGenerator.generate(List<String>,int,String)",0,1,0,0,1,1,0,0,0,0,0,0,2,1
"opennlp.tools.dictionary.serializer.DictionarySerializer.create(InputStream,EntryInserter)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.dictionary.Dictionary.contains(StringList),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.model.AbstractModelReader.readUTF(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.namefind.DictionaryNameFinder.find(String[]),0,3,0,0,1,1,0,0,0,0,0,0,2,3
opennlp.tools.parser.Parse.hashCode(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.AbstractEventTrainer.train(ObjectStream<Event>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(String[],Map<String,Object>)",0,1,0,0,1,1,0,0,0,0,0,0,2,1
opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.namefind.DefaultNameContextGenerator.getContext(int,String[],String[],Object[])",1,2,0,0,0,0,1,0,0,0,0,0,1,3
opennlp.tools.util.featuregen.StringPattern.recognize(String),0,4,0,1,1,0,0,0,0,0,0,0,1,5
opennlp.tools.ml.naivebayes.LogProbabilities.get(T),1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.util.Span.getCoveredText(CharSequence),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.computeInParallel(double[],Class<?extendsComputeTask>)",0,1,0,0,0,1,0,1,0,0,0,0,2,1
"opennlp.tools.parser.treeinsert.CheckContextGenerator.getContext(Parse,Parse[],int,boolean)",4,2,0,0,0,1,0,0,0,0,0,0,1,6
"opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(String[],Map<String,Object>)",0,2,0,0,0,0,1,0,0,0,0,0,1,2
"opennlp.tools.parser.treeinsert.Parser.train(String,ObjectStream<Parse>,HeadRules,TrainingParameters)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.parser.Parse.updateHeads(HeadRules),1,1,0,0,0,1,0,0,0,0,0,0,1,2
"opennlp.tools.parser.AbstractParserEventStream.getInitialChunks(Parse,List<Parse>)",1,2,0,0,0,2,0,0,0,0,0,0,2,3
"opennlp.tools.ml.model.GenericModelWriter.init(AbstractModel,DataOutputStream)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
"opennlp.tools.util.model.ModelUtil.writeModel(MaxentModel,OutputStream)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.parser.Parse.pruneParse(Parse),0,1,0,0,0,0,0,0,1,0,0,0,1,1
"opennlp.tools.ml.model.UniformPrior.setLabels(String[],String[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.model.Context.getParameters(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.parser.ChunkContextGenerator.chunkandpostag(int,String,String,String)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(String),0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.cmdline.ArgumentParser.createUsage(Class<T>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.lemmatizer.LemmatizerME.train(String,ObjectStream<LemmaSample>,TrainingParameters,LemmatizerFactory)",3,0,0,0,0,0,0,0,0,0,0,0,0,3
opennlp.tools.ngram.NGramModel.toDictionary(boolean),0,0,0,0,0,0,1,0,0,0,0,0,1,0
opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(char[]),0,1,0,0,1,0,0,1,0,0,0,0,2,1
"opennlp.tools.lemmatizer.DefaultLemmatizerContextGenerator.getContext(int,String[],String[],String[])",4,0,0,0,2,0,0,0,0,0,0,0,2,4
"opennlp.tools.namefind.NameSample.parse(String,String,boolean)",0,5,0,0,1,0,0,0,0,0,0,0,1,5
"opennlp.tools.util.featuregen.OutcomePriorFeatureGenerator.createFeatures(List<String>,String[],int,String[])",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"opennlp.tools.ml.maxent.quasinewton.QNModel.eval(String[],float[],double[])",0,2,0,0,2,1,0,0,0,0,0,0,3,2
opennlp.tools.parser.Parse.getProb(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.ml.naivebayes.NaiveBayesTrainer.maxIndex(double[]),0,0,0,0,1,0,0,0,0,0,0,0,1,0
opennlp.tools.parser.Parse.getType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
opennlp.tools.parser.chunking.ParserEventStream.init(),1,0,0,1,0,0,0,0,0,0,0,0,0,2
"spark.embeddedserver.jetty.EmbeddedJettyFactory.create(Routes,StaticFilesConfiguration,boolean)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.embeddedserver.jetty.SocketConnectorFactory.createHttpConnectionFactory(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.embeddedserver.jetty.SocketConnectorFactory.createSocketConnector(Server,String,int)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.embeddedserver.jetty.websocket.WebSocketServletContextHandlerFactory.create(Map<String,WebSocketHandlerWrapper>,Optional<Integer>)",1,1,0,0,0,0,0,1,0,0,0,0,1,2
"spark.http.matching.MatcherFilter.doFilter(ServletRequest,ServletResponse,FilterChain)",2,5,0,0,0,0,0,0,0,0,0,0,0,7
"spark.embeddedserver.jetty.JettyServer.create(int,int,int)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"spark.embeddedserver.jetty.JettyHandler.doHandle(String,Request,HttpServletRequest,HttpServletResponse)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
spark.Service.getPaths(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.staticfiles.StaticFilesConfiguration.configure(String),1,1,0,0,0,0,0,0,0,0,0,0,0,2
spark.utils.MimeParse.parseMimeType(String),2,1,0,0,1,0,0,0,0,0,0,0,1,3
spark.staticfiles.StaticFilesConfiguration.configureExternal(String),1,2,0,0,0,0,0,0,0,0,0,0,0,3
"spark.Service.addRoute(HttpMethod,RouteImpl)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.embeddedserver.EmbeddedServers.initialize(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
spark.utils.SparkUtils.convertRouteToList(String),0,1,0,0,0,0,1,0,0,0,0,0,1,1
spark.resource.AbstractFileResolvingResource.getFile(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.staticfiles.StaticFilesConfiguration.consumeWithFileResourceHandlers(HttpServletRequest,HttpServletResponse)",1,2,0,0,0,0,0,1,0,0,0,0,1,3
"spark.utils.GzipUtils.checkAndWrap(HttpServletRequest,HttpServletResponse,boolean)",1,1,0,0,0,0,0,0,0,0,0,0,0,2
"spark.utils.MimeParse.fitnessAndQualityParsed(String,Collection<ParseResults>)",0,3,0,0,0,0,1,1,0,0,0,0,2,3
"spark.Service.addFilter(HttpMethod,FilterImpl)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.staticfiles.StaticFilesFolder.localConfiguredTo(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.Service.exception(Class<T>,ExceptionHandler<?superT>)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.http.matching.BeforeFilters.execute(RouteContext),0,2,0,0,0,0,1,0,0,0,0,0,1,2
spark.embeddedserver.jetty.EmbeddedJettyServer.join(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.embeddedserver.jetty.SocketConnectorFactory.createSecureSocketConnector(Server,String,int,SslStores)",5,0,0,0,0,0,0,0,0,0,0,0,0,5
spark.resource.ClassPathResourceHandler.getResource(String),1,3,0,0,0,0,0,0,0,0,0,0,0,4
"spark.Routable.get(String,Route)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.staticfiles.StaticFilesFolder.externalConfiguredTo(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.route.Routes.findTargetWithGivenAcceptType(List<RouteEntry>,String)",1,2,0,0,0,0,0,0,0,0,0,0,0,3
spark.http.matching.RequestWrapper.changeMatch(RouteMatch),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.resource.AbstractResourceHandler.getResource(HttpServletRequest),1,1,0,0,0,0,0,0,0,0,0,0,0,2
"spark.TemplateViewRouteImpl.create(String,String,TemplateViewRoute,TemplateEngine)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.Spark.stop(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.embeddedserver.jetty.websocket.WebSocketHandlerClassWrapper.getHandler(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.route.RouteEntry.matchPath(String),3,7,0,0,0,2,0,0,0,0,0,0,2,10
spark.Service.initializeRouteMatcher(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
spark.route.ServletRoutes.get(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String,int,SslStores,int,int,int)",6,1,0,0,0,0,0,0,0,0,0,0,0,7
"spark.route.Routes.add(HttpMethod,String,String,Object)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.utils.MimeParse.toFloat(String,float)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
"spark.route.Routes.find(HttpMethod,String,String)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.ExceptionMapper.map(Class<?extendsException>,ExceptionHandlerImpl)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.resource.ExternalResource.getDescription(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.http.matching.RouteContext.acceptType(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
spark.http.matching.Routes.execute(RouteContext),2,6,0,0,0,0,0,0,0,0,0,0,0,8
spark.resource.ExternalResourceHandler.getResource(String),1,3,0,0,0,0,0,0,0,0,0,0,0,4
"spark.route.Routes.findTargetsForRequestedRoute(HttpMethod,String)",0,1,0,0,0,0,1,0,0,0,0,0,1,1
"spark.Request.getParams(List<String>,List<String>)",0,1,0,0,1,0,0,0,0,0,0,0,1,1
"spark.route.Routes.findMultiple(HttpMethod,String,String)",0,2,0,0,0,0,1,0,0,0,0,0,1,2
spark.utils.ClassUtils.registerCommonClasses(Class<?>...),0,0,0,0,0,0,1,0,0,0,0,0,1,0
spark.route.Routes.routeWithGivenAcceptType(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"spark.utils.StringUtils.delimitedListToStringArray(String,String,String)",3,1,0,0,0,1,0,0,0,1,0,0,2,4
"spark.route.RouteEntry.matches(HttpMethod,String)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
spark.servlet.SparkFilter.getApplications(FilterConfig),1,1,0,0,0,1,0,0,0,0,0,0,1,2
"spark.staticfiles.StaticFilesConfiguration.consume(HttpServletRequest,HttpServletResponse)",0,1,0,0,0,0,0,0,0,0,0,0,0,1
spark.embeddedserver.jetty.EmbeddedJettyServer.extinguish(),0,1,0,0,0,0,0,0,0,0,0,0,0,1
spark.utils.SparkUtils.isParam(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.jts.JtsShapeFactory.pointXYZ(double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.BBoxCalculator.expandXRange(double,double)",5,5,0,0,0,0,0,0,0,1,0,0,1,10
org.locationtech.spatial4j.io.WKTReader.newState(String),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMinY(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsGeometry.intersectionMatrixToSpatialRelation(IntersectionMatrix),1,0,0,1,0,0,0,0,0,0,0,0,0,2
"org.locationtech.spatial4j.shape.impl.BBoxCalculator.expandRange(double,double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.RectangleImpl.relate(Shape),3,0,0,0,0,0,0,0,0,0,0,0,0,3
org.locationtech.spatial4j.shape.impl.CircleImpl.relate(Shape),4,0,0,0,0,0,0,0,0,0,0,0,0,4
"org.locationtech.spatial4j.shape.impl.RectangleImpl.relateXRange(double,double)",1,5,0,0,0,0,0,0,0,0,0,0,0,6
"org.locationtech.spatial4j.distance.DistanceUtils.distHaversineRAD(double,double,double,double)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.shape.impl.PointImpl.relate(Shape),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.getGeometryFactory(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.verifyY(double),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.RectangleImpl.isEmpty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.GeoCircle.init(),1,3,0,0,0,0,0,0,0,0,0,0,0,4
"org.locationtech.spatial4j.shape.impl.CircleImpl.relateRectanglePhase2(Rectangle,SpatialRelation)",6,3,0,0,0,0,0,0,0,0,0,0,0,9
org.locationtech.spatial4j.shape.impl.RectangleImpl.getCenter(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.shape.jts.JtsGeometry.validate(),1,1,0,1,0,0,0,0,0,0,0,0,0,3
org.locationtech.spatial4j.shape.ShapeCollection.relate(Shape),1,3,0,0,0,0,1,0,0,0,0,0,1,4
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.verifyX(double),1,0,0,0,0,0,0,0,0,0,0,0,0,1
"org.locationtech.spatial4j.distance.GeodesicSphereDistCalc.distance(Point,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.PointImpl.reset(double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.jts.JtsShapeFactory.makeShape(Geometry,boolean,boolean)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.SpatialRelation.intersects(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.RectangleImpl.getWidth(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.RectangleImpl.getArea(SpatialContext),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.context.SpatialContextFactory.checkDefaultFormats(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.shape.impl.CircleImpl.relate(Rectangle),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.GeoCircle.numCornersIntersect(Rectangle),3,6,0,0,0,0,0,0,0,0,0,0,0,9
org.locationtech.spatial4j.shape.jts.JtsPoint.getY(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.context.SpatialContext.toString(),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.newSpatialContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory.checkDefaultFormats(),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.lineString(List<Point>,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.context.SpatialContextFactory.newSpatialContext(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.context.SpatialContextFactory.makeFormats(SpatialContext),0,0,0,0,0,0,2,0,0,0,0,0,2,0
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.multiShape(List<S>),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.PointImpl.equals(Object),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.polygon(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.distance.CartesianDistCalc.within(Point,double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.PointImpl.isEmpty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.InfBufLine.cornerByQuadrant(Rectangle,int,Point)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.SpatialRelation.combine(SpatialRelation),2,0,0,0,0,0,0,0,0,0,0,0,0,2
"org.locationtech.spatial4j.shape.impl.RectangleImpl.relateYRange(double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.pointXY(double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.distance.DistanceUtils.normLonDEG(double),2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.io.jackson.ShapesAsGeoJSONModule.getModuleName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsPoint.isEmpty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMinX(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.BBoxCalculator.rangeContains(double,double,double)",1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.RectangleImpl.getBoundingBox(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.multiShape(Class<T>),1,0,0,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.BufferedLineString.hasArea(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.SpatialRelation.transpose(),0,0,1,0,0,0,0,0,0,0,0,0,0,1
org.locationtech.spatial4j.shape.impl.BufferedLine.getBoundingBox(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.io.GeoJSONReader.read(Object),0,0,0,6,0,0,0,0,0,0,0,0,0,6
org.locationtech.spatial4j.io.PolyshapeReader.read(Reader),1,8,0,1,0,0,0,1,1,0,0,0,2,10
"org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.rect(double,double,double,double)",3,3,0,0,0,0,0,0,0,0,0,0,0,6
"org.locationtech.spatial4j.distance.DistanceUtils.calcBoxByDistFromPt_deltaLonDEG(double,double,double)",2,0,0,0,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.context.SpatialContextFactory.makeBinaryCodec(SpatialContext),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.circle(Point,double)",2,1,0,0,0,0,0,0,0,0,0,0,0,3
org.locationtech.spatial4j.shape.impl.InfBufLine.contains(Point),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.BufferedLineString.relate(Shape),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.BufferedLine.isEmpty(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.context.SpatialContext.makeRectangle(double,double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.io.WKTReader.getFormatName(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.RectangleImpl.relate(Rectangle),5,0,0,0,0,0,0,0,0,0,0,0,0,5
"org.locationtech.spatial4j.shape.jts.JtsGeometry.shiftGeomByX(Geometry,int)",1,0,0,1,0,0,0,0,0,0,0,0,0,2
org.locationtech.spatial4j.shape.impl.RectangleImpl.getMaxX(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl.lineString(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsGeometry.unwrapDateline(Geometry),4,3,0,1,0,1,0,0,0,0,0,0,1,8
"org.locationtech.spatial4j.shape.ShapeCollection.computeBoundingBox(Collection<?extendsShape>,SpatialContext)",1,0,0,0,0,0,1,0,0,0,0,0,1,1
"org.locationtech.spatial4j.shape.impl.RectangleImpl.reset(double,double,double,double)",0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.ShapeCollection.size(),0,0,0,0,0,0,0,0,0,0,0,0,0,0
org.locationtech.spatial4j.shape.jts.JtsShapeFactory.normX(double),0,0,0,0,0,0,0,0,0,0,0,0,0,0
"org.locationtech.spatial4j.io.jackson.ShapeAsGeoJSONSerializer.write(JsonGenerator,Shape)",7,3,0,0,0,1,0,0,0,1,0,0,2,10
org.locationtech.spatial4j.shape.impl.InfBufLine.quadrant(Point),2,0,0,0,0,0,0,0,0,0,0,0,0,2
